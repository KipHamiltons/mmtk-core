initSidebarItems({"mod":[["address","An abstract of memory address and object reference."],["alloc","Allocators"],["alloc_bit","Alloc bit"],["analysis","An analysis framework for collecting data and profiling in GC."],["constants","Constants used in MMTk"],["conversions","Calculation, conversion and rounding for memory related numbers."],["copy","The copy allocators for a GC worker."],["edge_logger","Logging edges to check duplicated edges in GC. This is a simple module to log edges and check for duplicate edges."],["finalizable_processor","Finalization implementation."],["generic_freelist","A very simple, generic malloc-free allocator"],["heap","Heap implementation, including page resource, mmapper, etc."],["int_array_freelist","Implementation of GenericFreeList by an int vector."],["logger","Logger initialization"],["malloc","Various malloc implementations (conditionally compiled by features)"],["memory","Wrapper functions for memory syscalls such as mmap, mprotect, etc."],["metadata","Metadata (OnSide or InHeader) implementation. This is a generic module to work with metadata including side metadata and in-object metadata."],["object_forwarding","Forwarding word in object copying."],["opaque_pointer","Opaque pointers used in MMTk, e.g. VMThread."],["options","MMTk command line options."],["raw_memory_freelist","Implementation of GenericFreeList backed by raw memory, allocated on demand direct from the OS (via mmap)."],["reference_processor","Reference processing implementation."],["rust_util","Utilities funcitons for Rust"],["sanity","Sanity checker for GC."],["statistics","Utils for collecting statistics."],["synchronized_counter",""],["treadmill","A treadmill implementation."]],"struct":[["SynchronizedCounter",""]]});