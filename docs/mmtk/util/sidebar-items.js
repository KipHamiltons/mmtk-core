initSidebarItems({"mod":[["address","An abstract of memory address and object reference."],["alloc","Allocators"],["analysis","An analysis framework for collecting data and profiling in GC."],["constants","Constants used in MMTk"],["conversions","Calculation, conversion and rounding for memory related numbers."],["edge_logger","Logging edges to check duplicated edges in GC. This is a simple module to log edges and check for duplicate edges."],["finalizable_processor","Finalization implementation."],["forwarding_word","Forwarding word in object copying."],["gc_byte","Access to per-object metadata (in GC byte or in side metadata)."],["generic_freelist","A very simple, generic malloc-free allocator"],["header_byte","Access to per-object metadata with policy-specific configuration."],["heap","Heap implementation, including page resource, mmapper, etc."],["int_array_freelist","Implementation of GenericFreeList by an int vector."],["logger","Logger initialization"],["malloc","Various malloc implementations (conditionally compiled by features)"],["memory","Wrapper functions for memory syscalls such as mmap, mprotect, etc."],["opaque_pointer","Opaque pointers used in MMTk, e.g. VMThread."],["options","MMTk command line options."],["raw_memory_freelist","Implementation of GenericFreeList backed by raw memory, allocated on demand direct from the OS (via mmap)."],["reference_processor","Reference processing implementation."],["sanity","Sanity checker for GC."],["side_metadata","Side metadata implementation. This is a generic module to work with side metadata (vs. in-object metadata)"],["statistics","Utils for collecting statistics."],["synchronized_counter",""],["treadmill","A treadmill implementation."]],"struct":[["SynchronizedCounter",""]]});