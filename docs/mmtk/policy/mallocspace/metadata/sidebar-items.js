initSidebarItems({"constant":[["ACTIVE_CHUNK_METADATA_SPEC","Metadata spec for the active chunk byte"],["ACTIVE_PAGE_METADATA_SPEC","Metadata spec for the active page byte"]],"fn":[["is_alloced",""],["is_alloced_by_malloc",""],["is_alloced_object",""],["is_alloced_object_unsafe",""],["is_chunk_mapped",""],["is_chunk_marked",""],["is_chunk_marked_unsafe",""],["is_marked",""],["is_meta_space_mapped",""],["is_page_marked",""],["is_page_marked_unsafe",""],["load128","Load u128 bits of side metadata"],["map_active_chunk_metadata",""],["map_meta_space_for_chunk",""],["set_alloc_bit",""],["set_chunk_mark",""],["set_mark_bit",""],["set_page_mark",""],["unset_alloc_bit",""],["unset_alloc_bit_unsafe",""],["unset_chunk_mark_unsafe",""],["unset_mark_bit",""],["unset_page_mark_unsafe",""]],"struct":[["CHUNK_MAP_LOCK","Lock to synchronize the mapping of side metadata for a newly allocated chunk by malloc"],["CHUNK_METADATA",""],["MAX_METADATA_ADDRESS","Maximum metadata address for the ACTIVE_CHUNK_METADATA_SPEC which is used to check bounds"]]});