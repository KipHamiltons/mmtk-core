var searchIndex = JSON.parse('{\
"mmtk":{"doc":"Memory Management ToolKit (MMTk) is a portable and high …","i":[[0,"util","mmtk","Utilities used by other modules, including allocators, …",null,null],[0,"macros","mmtk::util","",null,null],[0,"conversions","","",null,null],[5,"is_address_aligned","mmtk::util::conversions","",null,[[["address",3]]]],[5,"page_align_down","","",null,[[["address",3]],["address",3]]],[5,"is_page_aligned","","",null,[[["address",3]]]],[5,"chunk_align_up","","",null,[[["address",3]],["address",3]]],[5,"chunk_align_down","","",null,[[["address",3]],["address",3]]],[5,"mmap_chunk_align_up","","",null,[[["address",3]],["address",3]]],[5,"mmap_chunk_align_down","","",null,[[["address",3]],["address",3]]],[5,"bytes_to_chunks_up","","",null,[[]]],[5,"address_to_chunk_index","","",null,[[["address",3]]]],[5,"chunk_index_to_address","","",null,[[],["address",3]]],[5,"raw_align_up","","",null,[[]]],[5,"raw_align_down","","",null,[[]]],[5,"raw_is_aligned","","",null,[[]]],[5,"pages_to_bytes","","",null,[[]]],[5,"bytes_to_pages_up","","",null,[[]]],[5,"bytes_to_pages","","",null,[[]]],[0,"address","mmtk::util","",null,null],[6,"ByteSize","mmtk::util::address","size in bytes",null,null],[6,"ByteOffset","","offset in byte",null,null],[3,"Address","","Address represents an arbitrary address. This is designed …",null,null],[18,"ZERO","","",0,null],[18,"MAX","","",0,null],[11,"from_ptr","","creates Address from a pointer",0,[[],["address",3]]],[11,"from_ref","","",0,[[],["address",3]]],[11,"from_mut_ptr","","creates Address from a mutable pointer",0,[[],["address",3]]],[11,"zero","","creates a null Address (0)",0,[[],["address",3]]],[11,"max","","creates an Address of (usize::MAX)",0,[[],["address",3]]],[11,"from_usize","","creates an arbitrary Address",0,[[],["address",3]]],[11,"shift","","shifts the address by N T-typed objects (returns addr + N …",0,[[]]],[11,"get_extent","","",0,[[["address",3]],["bytesize",6]]],[11,"get_offset","","",0,[[["address",3]],["byteoffset",6]]],[11,"add","","",0,[[],["address",3]]],[11,"load","","loads a value of type T from the address",0,[[],["copy",8]]],[11,"store","","stores a value of type T to the address",0,[[]]],[11,"atomic_load","","atomic operation: load",0,[[["ordering",4]]]],[11,"atomic_store","","atomic operation: store",0,[[["ordering",4]]]],[11,"compare_exchange","","atomic operation: compare and exchange usize",0,[[["ordering",4]],["result",4]]],[11,"is_zero","","is this address zero?",0,[[]]],[11,"align_up","","aligns up the address to the given alignment",0,[[["bytesize",6]],["address",3]]],[11,"align_down","","aligns down the address to the given alignment",0,[[["bytesize",6]],["address",3]]],[11,"is_aligned_to","","is this address aligned to the given alignment",0,[[]]],[11,"to_object_reference","","converts the Address into an ObjectReference",0,[[],["objectreference",3]]],[11,"to_ptr","","converts the Address to a pointer",0,[[]]],[11,"to_mut_ptr","","converts the Address to a mutable pointer",0,[[]]],[11,"as_usize","","converts the Address to a pointer-sized integer",0,[[]]],[11,"chunk_index","","returns the chunk index for this address",0,[[]]],[11,"is_mapped","","return true if the referenced memory is mapped",0,[[]]],[3,"ObjectReference","","ObjectReference represents address for an object. …",null,null],[11,"to_address","","converts the ObjectReference to an Address",1,[[],["address",3]]],[11,"is_null","","is this object reference null reference?",1,[[]]],[11,"value","","returns the ObjectReference",1,[[]]],[11,"is_live","","",1,[[]]],[11,"is_movable","","",1,[[]]],[11,"is_mapped","","",1,[[]]],[11,"is_sane","","",1,[[]]],[0,"alloc","mmtk::util","",null,null],[0,"allocator","mmtk::util::alloc","",null,null],[5,"align_allocation_no_fill","mmtk::util::alloc::allocator","",null,[[["address",3]],["address",3]]],[5,"align_allocation","","",null,[[["address",3]],["address",3]]],[5,"fill_alignment_gap","","",null,[[["address",3]]]],[5,"get_maximum_aligned_size","","",null,[[]]],[8,"Allocator","","",null,null],[10,"get_tls","","",2,[[],["opaquepointer",3]]],[10,"get_space","","",2,[[],[["option",4],["space",8]]]],[10,"get_plan","","",2,[[],["plan",8]]],[10,"alloc","","",2,[[],["address",3]]],[11,"alloc_slow","","",2,[[],["address",3]]],[11,"alloc_slow_inline","","",2,[[],["address",3]]],[10,"alloc_slow_once","","",2,[[],["address",3]]],[11,"is","","Returns true if the trait object wraps an object of type …",2,[[]]],[11,"downcast","","Returns a boxed object from a boxed trait object if the …",2,[[["box",3]],[["result",4],["box",3],["box",3]]]],[11,"downcast_rc","","Returns an <code>Rc</code>-ed object from an <code>Rc</code>-ed trait object if the …",2,[[["rc",3]],[["rc",3],["result",4],["rc",3]]]],[11,"downcast_ref","","Returns a reference to the object within the trait object …",2,[[],["option",4]]],[11,"downcast_mut","","Returns a mutable reference to the object within the …",2,[[],["option",4]]],[0,"allocators","mmtk::util::alloc","",null,null],[3,"Allocators","mmtk::util::alloc::allocators","",null,null],[12,"bump_pointer","","",3,null],[12,"large_object","","",3,null],[11,"get_allocator","","SafetyThe selector needs to be valid, and points to an …",3,[[["allocatorselector",4]],["allocator",8]]],[11,"get_allocator_mut","","SafetyThe selector needs to be valid, and points to an …",3,[[["allocatorselector",4]],["allocator",8]]],[11,"new","","",3,[[["plan",8],["opaquepointer",3]]]],[4,"AllocatorSelector","","",null,null],[13,"BumpPointer","","",4,null],[13,"LargeObject","","",4,null],[0,"dump_linear_scan","mmtk::util::alloc","",null,null],[3,"DumpLinearScan","mmtk::util::alloc::dump_linear_scan","",null,null],[0,"embedded_meta_data","mmtk::util::alloc","",null,null],[17,"LOG_BYTES_IN_REGION","mmtk::util::alloc::embedded_meta_data","",null,null],[17,"BYTES_IN_REGION","","",null,null],[17,"REGION_MASK","","",null,null],[17,"LOG_PAGES_IN_REGION","","",null,null],[17,"PAGES_IN_REGION","","",null,null],[5,"get_metadata_base","","",null,[[["address",3]],["address",3]]],[5,"get_metadata_offset","","",null,[[["address",3]]]],[0,"large_object_allocator","mmtk::util::alloc","",null,null],[3,"LargeObjectAllocator","mmtk::util::alloc::large_object_allocator","",null,null],[12,"tls","","",5,null],[11,"new","","",5,[[["option",4],["largeobjectspace",3],["plan",8],["opaquepointer",3]]]],[0,"linear_scan","mmtk::util::alloc","",null,null],[8,"LinearScan","mmtk::util::alloc::linear_scan","",null,null],[10,"scan","","",6,[[["objectreference",3]]]],[3,"BumpAllocator","mmtk::util::alloc","",null,null],[12,"tls","","",7,null],[0,"constants","mmtk::util","",null,null],[17,"INSTANCE_FIELD","mmtk::util::constants","Modes.",null,null],[17,"ARRAY_ELEMENT","","",null,null],[17,"LOG_BYTES_IN_BYTE","","",null,null],[17,"BYTES_IN_BYTE","","",null,null],[17,"LOG_BITS_IN_BYTE","","",null,null],[17,"BITS_IN_BYTE","","",null,null],[17,"LOG_BYTES_IN_MBYTE","","",null,null],[17,"BYTES_IN_MBYTE","","",null,null],[17,"LOG_BYTES_IN_KBYTE","","",null,null],[17,"BYTES_IN_KBYTE","","",null,null],[17,"SUPPORT_CARD_SCANNING","","",null,null],[17,"LOG_CARD_META_SIZE","","",null,null],[17,"LOG_CARD_UNITS","","",null,null],[17,"LOG_CARD_GRAIN","","",null,null],[17,"LOG_CARD_BYTES","","",null,null],[17,"LOG_CARD_META_BYTES","","",null,null],[17,"LOG_CARD_META_PAGES","","",null,null],[17,"CARD_META_PAGES_PER_REGION","","",null,null],[17,"CARD_MASK","","",null,null],[17,"LAZY_SWEEP","","Lazy sweeping - controlled from here because …",null,null],[17,"LOG_BYTES_IN_CHAR","","",null,null],[17,"BYTES_IN_CHAR","","",null,null],[17,"LOG_BITS_IN_CHAR","","",null,null],[17,"BITS_IN_CHAR","","",null,null],[17,"LOG_BYTES_IN_SHORT","","",null,null],[17,"BYTES_IN_SHORT","","",null,null],[17,"LOG_BITS_IN_SHORT","","",null,null],[17,"BITS_IN_SHORT","","",null,null],[17,"LOG_BYTES_IN_INT","","",null,null],[17,"BYTES_IN_INT","","",null,null],[17,"LOG_BITS_IN_INT","","",null,null],[17,"BITS_IN_INT","","",null,null],[17,"LOG_BYTES_IN_LONG","","",null,null],[17,"BYTES_IN_LONG","","",null,null],[17,"LOG_BITS_IN_LONG","","",null,null],[17,"BITS_IN_LONG","","",null,null],[17,"MAX_INT","","",null,null],[17,"MIN_INT","","",null,null],[17,"LOG_BYTES_IN_ADDRESS","","",null,null],[17,"BYTES_IN_ADDRESS","","",null,null],[17,"LOG_BITS_IN_ADDRESS","","",null,null],[17,"BITS_IN_ADDRESS","","",null,null],[17,"LOG_BYTES_IN_WORD","","",null,null],[17,"BYTES_IN_WORD","","",null,null],[17,"LOG_BITS_IN_WORD","","",null,null],[17,"BITS_IN_WORD","","",null,null],[17,"LOG_BYTES_IN_PAGE","","",null,null],[17,"BYTES_IN_PAGE","","",null,null],[17,"LOG_BITS_IN_PAGE","","",null,null],[17,"BITS_IN_PAGE","","",null,null],[17,"LOG_BYTES_IN_ADDRESS_SPACE","","",null,null],[17,"DEFAULT_STRESS_FACTOR","","",null,null],[0,"forwarding_word","mmtk::util","",null,null],[5,"attempt_to_forward","mmtk::util::forwarding_word","",null,[[["objectreference",3]]]],[5,"spin_and_get_forwarded_object","","",null,[[["objectreference",3]],["objectreference",3]]],[5,"forward_object","","",null,[[["objectreference",3],["allocationsemantics",4]],["objectreference",3]]],[5,"set_forwarding_pointer","","",null,[[["objectreference",3]]]],[5,"is_forwarded","","",null,[[["objectreference",3]]]],[5,"is_forwarded_or_being_forwarded","","",null,[[["objectreference",3]]]],[5,"state_is_forwarded_or_being_forwarded","","",null,[[]]],[5,"state_is_being_forwarded","","",null,[[]]],[5,"clear_forwarding_bits","","",null,[[["objectreference",3]]]],[5,"read_forwarding_word","","",null,[[["objectreference",3]]]],[5,"write_forwarding_word","","",null,[[["objectreference",3]]]],[5,"compare_exchange_forwarding_word","","",null,[[["objectreference",3]]]],[0,"gc_byte","mmtk::util","",null,null],[3,"GCByte","mmtk::util::gc_byte","This struct encapsulates operations on the per-object GC …",null,null],[5,"read_gc_byte","","Atomically reads the current value of an object\'s GC byte.",null,[[["objectreference",3]]]],[5,"write_gc_byte","","Atomically writes a new value to the GC byte of an object",null,[[["objectreference",3]]]],[5,"compare_exchange_gc_byte","","Atomically performs the compare-and-exchange operation on …",null,[[["objectreference",3]]]],[0,"generic_freelist","mmtk::util","",null,null],[17,"FAILURE","mmtk::util::generic_freelist","",null,null],[17,"MAX_HEADS","","",null,null],[17,"MAX_UNITS","","",null,null],[8,"GenericFreeList","","",null,null],[10,"head","","",8,[[]]],[10,"heads","","",8,[[]]],[10,"get_entry","","",8,[[]]],[10,"set_entry","","",8,[[]]],[11,"alloc","","",8,[[]]],[11,"alloc_from_unit","","",8,[[]]],[11,"free","","Free a previously allocated contiguous lump of units",8,[[]]],[11,"size","","",8,[[]]],[11,"initialize_heap","","",8,[[]]],[11,"add_to_free","","",8,[[]]],[11,"get_right","","",8,[[]]],[11,"set_sentinel","","",8,[[]]],[11,"get_size","","",8,[[]]],[11,"set_size","","",8,[[]]],[11,"get_free","","",8,[[]]],[11,"set_free","","",8,[[]]],[11,"get_next","","",8,[[]]],[11,"set_next","","",8,[[]]],[11,"get_prev","","",8,[[]]],[11,"set_prev","","",8,[[]]],[11,"get_left","","",8,[[]]],[11,"is_coalescable","","",8,[[]]],[11,"clear_uncoalescable","","",8,[[]]],[11,"set_uncoalescable","","",8,[[]]],[11,"is_multi","","",8,[[]]],[11,"is_free","","",8,[[]]],[11,"get_lo_entry","","",8,[[]]],[11,"get_hi_entry","","",8,[[]]],[11,"set_lo_entry","","",8,[[]]],[11,"set_hi_entry","","",8,[[]]],[11,"__alloc","","",8,[[]]],[11,"__split","","",8,[[]]],[11,"__coalesce","","",8,[[]]],[11,"__remove_from_free","","",8,[[]]],[0,"header_byte","mmtk::util","",null,null],[17,"TOTAL_BITS","mmtk::util::header_byte","",null,null],[3,"HeaderByte","","",null,null],[12,"needs_unlogged_bit","","",9,null],[12,"unlogged_bit_number","","",9,null],[12,"unlogged_bit","","",9,null],[12,"used_global_bits","","",9,null],[11,"new","","",9,[[["planconstraints",3]]]],[11,"mark_as_unlogged","","",9,[[["objectreference",3]]]],[11,"mark_as_logged","","",9,[[["objectreference",3]]]],[11,"is_unlogged","","",9,[[["objectreference",3]]]],[0,"heap","mmtk::util","",null,null],[0,"layout","mmtk::util::heap","",null,null],[0,"heap_parameters","mmtk::util::heap::layout","",null,null],[17,"LOG_MAX_SPACES","mmtk::util::heap::layout::heap_parameters","log_2 of the maximum number of spaces a Plan can support.",null,null],[17,"MAX_SPACES","","Maximum number of spaces a Plan can support.",null,null],[17,"LOG_SPACE_SIZE_64","","In a 64-bit addressing model, each space is the same …",null,null],[0,"vm_layout_constants","mmtk::util::heap::layout","",null,null],[17,"LOG_ADDRESS_SPACE","mmtk::util::heap::layout::vm_layout_constants","log_2 of the addressable virtual space ",null,null],[17,"LOG_BYTES_IN_CHUNK","","log_2 of the coarsest unit of address space allocation.",null,null],[17,"BYTES_IN_CHUNK","","Coarsest unit of address space allocation. ",null,null],[17,"PAGES_IN_CHUNK","","Coarsest unit of address space allocation, in pages ",null,null],[17,"LOG_MAX_CHUNKS","","log_2 of the maximum number of chunks we need to track.  …",null,null],[17,"MAX_CHUNKS","","Maximum number of chunks we need to track.  Only used in …",null,null],[17,"LOG_SPACE_EXTENT","","An upper bound on the extent of any space in the current …",null,null],[17,"MAX_SPACE_EXTENT","","An upper bound on the extent of any space in the current …",null,null],[17,"HEAP_START","","",null,null],[17,"HEAP_END","","",null,null],[17,"VM_SPACE_SIZE","","",null,null],[17,"AVAILABLE_START","","Lowest virtual address available for MMTk to manage.  The …",null,null],[17,"AVAILABLE_END","","Highest virtual address available for MMTk to manage.  …",null,null],[17,"AVAILABLE_BYTES","","Size of the address space available to the MMTk heap. ",null,null],[17,"LOG_MMAP_CHUNK_BYTES","","Granularity at which we map and unmap virtual address …",null,null],[17,"MMAP_CHUNK_BYTES","","",null,null],[17,"LOG_PAGES_IN_SPACE64","","log_2 of the number of pages in a 64-bit space ",null,null],[17,"PAGES_IN_SPACE64","","The number of pages in a 64-bit space ",null,null],[17,"SPACE_SHIFT_64","","",null,null],[17,"SPACE_MASK_64","","",null,null],[17,"SPACE_SIZE_64","","",null,null],[0,"mmapper","mmtk::util::heap::layout","",null,null],[8,"Mmapper","mmtk::util::heap::layout::mmapper","",null,null],[10,"eagerly_mmap_all_spaces","","Given an address array describing the regions of virtual …",10,[[]]],[10,"mark_as_mapped","","Mark a number of pages as mapped, without making any …",10,[[["address",3]]]],[10,"ensure_mapped","","Ensure that a range of pages is mmapped (or equivalent).  …",10,[[["address",3]]]],[10,"is_mapped_address","","Is the page pointed to by this address mapped ? @param …",10,[[["address",3]]]],[10,"protect","","Mark a number of pages as inaccessible. @param start …",10,[[["address",3]]]],[0,"heap_layout","mmtk::util::heap::layout","",null,null],[6,"VMMap","mmtk::util::heap::layout::heap_layout","",null,null],[6,"Mmapper","","",null,null],[0,"map","mmtk::util::heap::layout","",null,null],[8,"Map","mmtk::util::heap::layout::map","",null,null],[16,"FreeList","","",11,null],[10,"new","","",11,[[]]],[10,"insert","","",11,[[["address",3],["spacedescriptor",3]]]],[10,"create_freelist","","",11,[[["commonfreelistpageresource",3]],["box",3]]],[10,"create_parent_freelist","","",11,[[["commonfreelistpageresource",3]],["box",3]]],[10,"allocate_contiguous_chunks","","",11,[[["address",3],["spacedescriptor",3]],["address",3]]],[10,"get_next_contiguous_region","","",11,[[["address",3]],["address",3]]],[10,"get_contiguous_region_chunks","","",11,[[["address",3]]]],[10,"get_contiguous_region_size","","",11,[[["address",3]]]],[10,"free_all_chunks","","",11,[[["address",3]]]],[10,"free_contiguous_chunks","","",11,[[["address",3]]]],[11,"boot","","",11,[[]]],[10,"finalize_static_space_map","","",11,[[["address",3]]]],[10,"is_finalized","","",11,[[]]],[10,"get_discontig_freelist_pr_ordinal","","",11,[[["commonfreelistpageresource",3]]]],[10,"get_descriptor_for_address","","",11,[[["address",3]],["spacedescriptor",3]]],[11,"get_chunk_index","","",11,[[["address",3]]]],[11,"address_for_chunk_index","","",11,[[],["address",3]]],[10,"add_to_cumulative_committed_pages","","",11,[[]]],[0,"map64","mmtk::util::heap::layout","",null,null],[3,"Map64","mmtk::util::heap::layout::map64","",null,null],[3,"FragmentedMapper","mmtk::util::heap::layout","",null,null],[0,"freelistpageresource","mmtk::util::heap","",null,null],[3,"CommonFreeListPageResource","mmtk::util::heap::freelistpageresource","",null,null],[11,"get_start","","",12,[[],["address",3]]],[11,"resize_freelist","","",12,[[["address",3]]]],[3,"FreeListPageResource","","",null,null],[11,"new_contiguous","","",13,[[["address",3],["vmmap",6]]]],[11,"new_discontiguous","","",13,[[["vmmap",6]]]],[11,"release_pages","","",13,[[["address",3]]]],[0,"monotonepageresource","mmtk::util::heap","",null,null],[3,"MonotonePageResource","mmtk::util::heap::monotonepageresource","",null,null],[4,"MonotonePageResourceConditional","","",null,null],[13,"Contiguous","","",14,null],[12,"start","mmtk::util::heap::monotonepageresource::MonotonePageResourceConditional","",15,null],[12,"zeroing_cursor","","Current frontier of zeroing, in a separate zeroing thread ",15,null],[12,"zeroing_sentinel","","Current limit of zeroing.  If zeroingCursor < …",15,null],[13,"Discontiguous","mmtk::util::heap::monotonepageresource","",14,null],[11,"new_contiguous","","",16,[[["address",3],["vmmap",6]]]],[11,"new_discontiguous","","",16,[[["vmmap",6]]]],[11,"reset","","SafetyTODO: I am not sure why this is unsafe.",16,[[]]],[0,"pageresource","mmtk::util::heap","",null,null],[8,"PageResource","mmtk::util::heap::pageresource","",null,null],[11,"get_new_pages","","Allocate pages from this resource. Simply bump the …",17,[[["opaquepointer",3]],["address",3]]],[11,"reserve_pages","","",17,[[]]],[11,"clear_request","","",17,[[]]],[11,"update_zeroing_approach","","",17,[[]]],[11,"skip_concurrent_zeroing","","",17,[[]]],[11,"trigger_concurrent_zeroing","","",17,[[]]],[11,"concurrent_zeroing","","",17,[[]]],[10,"alloc_pages","","",17,[[["opaquepointer",3]],["address",3]]],[10,"adjust_for_metadata","","",17,[[]]],[11,"commit_pages","","Commit pages to the page budget.  This is called after …",17,[[["opaquepointer",3]]]],[11,"reserved_pages","","",17,[[]]],[11,"committed_pages","","",17,[[]]],[11,"bind_space","","",17,[[["space",8]]]],[10,"common","","",17,[[],["commonpageresource",3]]],[10,"common_mut","","",17,[[],["commonpageresource",3]]],[11,"vm_map","","",17,[[],["vmmap",6]]],[3,"CommonPageResource","","",null,null],[12,"contiguous","","",18,null],[12,"growable","","",18,null],[12,"space","","",18,null],[11,"new","","",18,[[],["commonpageresource",3]]],[11,"reserve","","",18,[[]]],[11,"release_reserved","","",18,[[]]],[11,"get_reserved","","",18,[[]]],[11,"reset_reserved","","",18,[[]]],[11,"commit","","",18,[[]]],[11,"release_committed","","",18,[[]]],[11,"get_committed","","",18,[[]]],[11,"reset_committed","","",18,[[]]],[0,"space_descriptor","mmtk::util::heap","",null,null],[3,"SpaceDescriptor","mmtk::util::heap::space_descriptor","",null,null],[18,"UNINITIALIZED","","",19,null],[11,"create_descriptor_from_heap_range","","",19,[[["address",3]],["spacedescriptor",3]]],[11,"create_descriptor","","",19,[[],["spacedescriptor",3]]],[11,"is_empty","","",19,[[]]],[11,"is_contiguous","","",19,[[]]],[11,"is_contiguous_hi","","",19,[[]]],[11,"get_start","","",19,[[],["address",3]]],[11,"get_extent","","",19,[[]]],[11,"get_index","","",19,[[]]],[3,"HeapMeta","mmtk::util::heap","",null,null],[12,"heap_cursor","","",20,null],[12,"heap_limit","","",20,null],[12,"total_pages","","",20,null],[4,"VMRequest","","",null,null],[13,"RequestDiscontiguous","","",21,null],[13,"RequestFixed","","",21,null],[12,"start","mmtk::util::heap::VMRequest","",22,null],[12,"extent","","",22,null],[12,"top","","",22,null],[13,"RequestExtent","mmtk::util::heap","",21,null],[12,"extent","mmtk::util::heap::VMRequest","",23,null],[12,"top","","",23,null],[13,"RequestFraction","mmtk::util::heap","",21,null],[12,"frac","mmtk::util::heap::VMRequest","",24,null],[12,"top","","",24,null],[0,"int_array_freelist","mmtk::util","",null,null],[3,"IntArrayFreeList","mmtk::util::int_array_freelist","",null,null],[12,"head","","",25,null],[12,"heads","","",25,null],[12,"table","","",25,null],[11,"new","","",25,[[]]],[11,"from_parent","","",25,[[["intarrayfreelist",3]]]],[11,"resize_freelist","","",25,[[]]],[0,"logger","mmtk::util","",null,null],[5,"try_init","mmtk::util::logger","Attempt to init a env_logger for MMTk.",null,[[],[["result",4],["setloggererror",3]]]],[0,"malloc","mmtk::util","",null,null],[5,"calloc","mmtk::util::malloc","",null,[[]]],[5,"free","","",null,[[]]],[5,"malloc_usable_size","","",null,[[]]],[0,"memory","mmtk::util","",null,null],[5,"zero","mmtk::util::memory","",null,[[["address",3]]]],[5,"dzmmap","","Demand-zero mmap: This function guarantees to zero all …",null,[[["address",3]],[["address",3],["result",6]]]],[5,"munprotect","","",null,[[["address",3]],["result",6]]],[5,"mprotect","","",null,[[["address",3]],["result",6]]],[0,"opaque_pointer","mmtk::util","",null,null],[3,"OpaquePointer","mmtk::util::opaque_pointer","",null,null],[18,"UNINITIALIZED","","",26,null],[11,"from_address","","",26,[[["address",3]]]],[11,"is_null","","",26,[[]]],[0,"options","mmtk::util","",null,null],[4,"NurseryZeroingOptions","mmtk::util::options","",null,null],[13,"Temporal","","",27,null],[13,"Nontemporal","","",27,null],[13,"Concurrent","","",27,null],[13,"Adaptive","","",27,null],[4,"PlanSelector","","",null,null],[13,"NoGC","","",28,null],[13,"SemiSpace","","",28,null],[13,"GenCopy","","",28,null],[3,"UnsafeOptionsWrapper","","",null,null],[11,"new","","",29,[[["options",3]],["unsafeoptionswrapper",3]]],[11,"process","","SafetyThis method is not thread safe, as internally it …",29,[[]]],[3,"Options","","",null,null],[12,"plan","","",30,null],[12,"threads","","",30,null],[12,"use_short_stack_scans","","",30,null],[12,"use_return_barrier","","",30,null],[12,"eager_complete_sweep","","",30,null],[12,"ignore_system_g_c","","",30,null],[12,"variable_size_heap","","",30,null],[12,"no_finalizer","","",30,null],[12,"no_reference_types","","",30,null],[12,"nursery_zeroing","","",30,null],[12,"verbose","","",30,null],[12,"stress_factor","","",30,null],[12,"vm_space","","",30,null],[12,"vm_space_size","","",30,null],[11,"set_from_str","","",30,[[]]],[0,"raw_memory_freelist","mmtk::util","",null,null],[3,"RawMemoryFreeList","mmtk::util::raw_memory_freelist","",null,null],[12,"head","","",31,null],[12,"heads","","",31,null],[11,"default_block_size","","",31,[[]]],[11,"size_in_pages","","",31,[[]]],[11,"new","","",31,[[["address",3]]]],[11,"grow_freelist","","",31,[[]]],[11,"get_limit","","",31,[[],["address",3]]],[0,"reference_processor","mmtk::util","",null,null],[3,"ReferenceProcessors","mmtk::util::reference_processor","",null,null],[11,"new","","",32,[[]]],[11,"get","","",32,[[["semantics",4]],["referenceprocessor",3]]],[11,"clear","","",32,[[]]],[11,"add_soft_candidate","","",32,[[["objectreference",3]]]],[11,"add_weak_candidate","","",32,[[["objectreference",3]]]],[11,"add_phantom_candidate","","",32,[[["objectreference",3]]]],[11,"forward_refs","","",32,[[]]],[11,"scan_weak_refs","","",32,[[["opaquepointer",3]]]],[11,"scan_soft_refs","","",32,[[["opaquepointer",3]]]],[11,"scan_phantom_refs","","",32,[[["opaquepointer",3]]]],[17,"TRACE","","",null,null],[17,"TRACE_UNREACHABLE","","",null,null],[17,"TRACE_DETAIL","","",null,null],[17,"TRACE_FORWARD","","",null,null],[3,"ReferenceProcessor","","",null,null],[4,"Semantics","","",null,null],[13,"SOFT","","",33,null],[13,"WEAK","","",33,null],[13,"PHANTOM","","",33,null],[11,"new","","",34,[[["semantics",4]]]],[11,"clear","","",34,[[]]],[11,"add_candidate","","",34,[[["objectreference",3]]]],[11,"forward","","",34,[[]]],[0,"sanity","mmtk::util","",null,null],[0,"memory_scan","mmtk::util::sanity","",null,null],[5,"scan_region","mmtk::util::sanity::memory_scan","",null,[[]]],[0,"sanity_checker","mmtk::util::sanity","",null,null],[3,"SanityChecker","mmtk::util::sanity::sanity_checker","",null,null],[11,"new","","",35,[[]]],[3,"ScheduleSanityGC","","",null,null],[11,"new","","",36,[[]]],[3,"SanityPrepare","","",null,null],[12,"plan","","",37,null],[11,"new","","",37,[[]]],[3,"SanityRelease","","",null,null],[12,"plan","","",38,null],[11,"new","","",38,[[]]],[3,"SanityGCProcessEdges","","",null,null],[0,"statistics","mmtk::util","",null,null],[0,"counter","mmtk::util::statistics","",null,null],[8,"Counter","mmtk::util::statistics::counter","",null,null],[10,"start","","",39,[[]]],[10,"stop","","",39,[[]]],[10,"phase_change","","",39,[[]]],[10,"print_count","","",39,[[]]],[10,"print_total","","",39,[[["option",4]]]],[10,"print_min","","",39,[[]]],[10,"print_max","","",39,[[]]],[10,"print_last","","",39,[[]]],[10,"merge_phases","","",39,[[]]],[10,"implicitly_start","","",39,[[]]],[10,"name","","",39,[[],["string",3]]],[8,"Diffable","","",null,null],[16,"Val","","",40,null],[10,"current_value","","",40,[[]]],[10,"diff","","",40,[[]]],[10,"print_diff","","",40,[[]]],[3,"MonotoneNanoTime","","",null,null],[3,"LongCounter","","",null,null],[12,"implicitly_start","","",41,null],[11,"new","","",41,[[["sharedstats",3],["string",3],["arc",3]]]],[6,"Timer","","",null,null],[0,"stats","mmtk::util::statistics","",null,null],[17,"MAX_PHASES","mmtk::util::statistics::stats","",null,null],[17,"MAX_COUNTERS","","",null,null],[3,"SharedStats","","",null,null],[11,"get_phase","","",42,[[]]],[11,"get_gathering_stats","","",42,[[]]],[3,"Stats","","",null,null],[12,"shared","","",43,null],[11,"new","","",43,[[]]],[11,"new_timer","","",43,[[],[["arc",3],["mutex",3]]]],[11,"start_gc","","",43,[[]]],[11,"end_gc","","",43,[[]]],[11,"print_stats","","",43,[[["mmtk",3]]]],[11,"print_column_names","","",43,[[["hashmap",3]]]],[11,"start_all","","",43,[[]]],[11,"stop_all","","",43,[[["mmtk",3]]]],[11,"get_gathering_stats","","",43,[[]]],[0,"treadmill","mmtk::util","",null,null],[3,"TreadMill","mmtk::util::treadmill","",null,null],[11,"new","","",44,[[]]],[11,"add_to_treadmill","","",44,[[["address",3]]]],[11,"collect_nursery","","",44,[[],[["address",3],["vec",3]]]],[11,"collect","","",44,[[],[["address",3],["vec",3]]]],[11,"copy","","",44,[[["address",3]]]],[11,"to_space_empty","","",44,[[]]],[11,"from_space_empty","","",44,[[]]],[11,"nursery_empty","","",44,[[]]],[11,"flip","","",44,[[]]],[3,"SynchronizedCounter","mmtk::util","",null,null],[0,"plan","mmtk","",null,null],[0,"barriers","mmtk::plan","",null,null],[4,"WriteTarget","mmtk::plan::barriers","For field writes in HotSpot, we cannot always get the …",null,null],[13,"Object","","",45,null],[13,"Slot","","",45,null],[8,"Barrier","","",null,null],[10,"flush","","",46,[[]]],[10,"post_write_barrier","","",46,[[["writetarget",4]]]],[3,"NoBarrier","","",null,null],[3,"ModBuffer","","",null,null],[3,"FieldRememberingBarrier","","",null,null],[11,"new","","",47,[[["mmtk",3]]]],[0,"controller_collector_context","mmtk::plan","",null,null],[3,"ControllerCollectorContext","mmtk::plan::controller_collector_context","",null,null],[11,"new","","",48,[[]]],[11,"init","","",48,[[["arc",3]]]],[11,"run","","",48,[[["opaquepointer",3]]]],[11,"request","","",48,[[]]],[11,"clear_request","","",48,[[]]],[0,"global","mmtk::plan","",null,null],[8,"CopyContext","mmtk::plan::global","A GC worker\'s context for copying GCs. Each GC plan …",null,null],[16,"VM","","",49,null],[10,"constraints","","",49,[[],["planconstraints",3]]],[10,"init","","",49,[[["opaquepointer",3]]]],[10,"prepare","","",49,[[]]],[10,"release","","",49,[[]]],[10,"alloc_copy","","",49,[[["objectreference",3],["allocationsemantics",4]],["address",3]]],[11,"post_copy","","",49,[[["address",3],["objectreference",3],["allocationsemantics",4]]]],[11,"copy_check_allocator","","",49,[[["objectreference",3],["allocationsemantics",4]],["allocationsemantics",4]]],[3,"NoCopy","","",null,null],[11,"new","","",50,[[["mmtk",3]]]],[5,"create_mutator","","",null,[[["mmtk",3],["opaquepointer",3]],[["mutator",3],["box",3]]]],[5,"create_plan","","",null,[[["mmapper",6],["planselector",4],["unsafeoptionswrapper",3],["arc",3],["vmmap",6],["mmtkscheduler",6]],[["plan",8],["box",3]]]],[8,"Plan","","A plan describes the global core functionality for all …",null,null],[16,"VM","","",51,null],[10,"constraints","","",51,[[],["planconstraints",3]]],[10,"create_worker_local","","",51,[[["mmtk",3],["opaquepointer",3]],["gcworkerlocalptr",6]]],[10,"base","","",51,[[],["baseplan",3]]],[10,"schedule_collection","","",51,[[["mmtkscheduler",6]]]],[11,"common","","",51,[[],["commonplan",3]]],[11,"mmapper","","",51,[[],["mmapper",6]]],[11,"options","","",51,[[],["options",3]]],[10,"gc_init","","",51,[[["vmmap",6],["arc",3]]]],[10,"get_allocator_mapping","","",51,[[],["enummap",3]]],[11,"in_nursery","","",51,[[]]],[11,"enter_sanity","","",51,[[]]],[11,"leave_sanity","","",51,[[]]],[11,"is_in_sanity","","",51,[[]]],[11,"is_initialized","","",51,[[]]],[10,"prepare","","",51,[[["opaquepointer",3]]]],[10,"release","","",51,[[["opaquepointer",3]]]],[11,"poll","","",51,[[["space",8]]]],[11,"log_poll","","",51,[[["space",8]]]],[11,"collection_required","","This method controls the triggering of a GC. It is called …",51,[[["space",8]]]],[11,"get_pages_reserved","","",51,[[]]],[11,"get_total_pages","","",51,[[]]],[11,"get_pages_avail","","",51,[[]]],[11,"get_collection_reserve","","",51,[[]]],[10,"get_pages_used","","",51,[[]]],[11,"is_emergency_collection","","",51,[[]]],[11,"get_free_pages","","",51,[[]]],[11,"stress_test_gc_required","","",51,[[]]],[11,"handle_user_collection_request","","",51,[[["opaquepointer",3]]]],[11,"reset_collection_trigger","","",51,[[]]],[11,"modify_check","","",51,[[["objectreference",3]]]],[11,"is","","Returns true if the trait object wraps an object of type …",51,[[]]],[11,"downcast","","Returns a boxed object from a boxed trait object if the …",51,[[["box",3]],[["result",4],["box",3],["box",3]]]],[11,"downcast_rc","","Returns an <code>Rc</code>-ed object from an <code>Rc</code>-ed trait object if the …",51,[[["rc",3]],[["rc",3],["result",4],["rc",3]]]],[11,"downcast_ref","","Returns a reference to the object within the trait object …",51,[[],["option",4]]],[11,"downcast_mut","","Returns a mutable reference to the object within the …",51,[[],["option",4]]],[4,"GcStatus","","",null,null],[13,"NotInGC","","",52,null],[13,"GcPrepare","","",52,null],[13,"GcProper","","",52,null],[3,"BasePlan","","BasePlan should contain all plan-related state and …",null,null],[12,"initialized","","",53,null],[12,"gc_status","","",53,null],[12,"last_stress_pages","","",53,null],[12,"stacks_prepared","","",53,null],[12,"emergency_collection","","",53,null],[12,"user_triggered_collection","","",53,null],[12,"allocation_success","","",53,null],[12,"max_collection_attempts","","",53,null],[12,"cur_collection_attempts","","",53,null],[12,"oom_lock","","",53,null],[12,"control_collector_context","","",53,null],[12,"stats","","",53,null],[12,"vm_map","","",53,null],[12,"options","","",53,null],[12,"heap","","",53,null],[12,"unsync","","",53,null],[12,"inside_sanity","","",53,null],[12,"scanned_stacks","","",53,null],[12,"mutator_iterator_lock","","",53,null],[12,"allocation_bytes","","",53,null],[3,"BaseUnsync","","",null,null],[12,"code_space","","",54,null],[12,"ro_space","","",54,null],[12,"vm_space","","",54,null],[5,"create_vm_space","","",null,[[["mmapper",6],["heapmeta",3],["vmmap",6],["planconstraints",3]],[["immortalspace",3],["vmbinding",8]]]],[11,"new","","",53,[[["mmapper",6],["unsafeoptionswrapper",3],["heapmeta",3],["arc",3],["vmmap",6],["planconstraints",3]],["baseplan",3]]],[11,"gc_init","","",53,[[["vmmap",6],["arc",3]]]],[11,"get_pages_used","","",53,[[]]],[11,"trace_object","","",53,[[["objectreference",3]],["objectreference",3]]],[11,"prepare","","",53,[[["opaquepointer",3]]]],[11,"release","","",53,[[["opaquepointer",3]]]],[11,"set_collection_kind","","",53,[[]]],[11,"set_gc_status","","",53,[[["gcstatus",4]]]],[11,"stacks_prepared","","",53,[[]]],[11,"gc_in_progress","","",53,[[]]],[11,"gc_in_progress_proper","","",53,[[]]],[11,"increase_allocation_bytes_by","","",53,[[]]],[3,"CommonPlan","","CommonPlan is for representing state and features used by <em>…",null,null],[12,"unsync","","",55,null],[12,"base","","",55,null],[3,"CommonUnsync","","",null,null],[12,"immortal","","",56,null],[12,"los","","",56,null],[11,"new","","",55,[[["mmapper",6],["unsafeoptionswrapper",3],["heapmeta",3],["arc",3],["vmmap",6],["planconstraints",3]],["commonplan",3]]],[11,"gc_init","","",55,[[["vmmap",6],["arc",3]]]],[11,"get_pages_used","","",55,[[]]],[11,"trace_object","","",55,[[["objectreference",3]],["objectreference",3]]],[11,"prepare","","",55,[[["opaquepointer",3]]]],[11,"release","","",55,[[["opaquepointer",3]]]],[11,"stacks_prepared","","",55,[[]]],[11,"get_immortal","","",55,[[],["immortalspace",3]]],[11,"get_los","","",55,[[],["largeobjectspace",3]]],[4,"AllocationSemantics","","Allocation semantics that MMTk provides. Each allocation …",null,null],[13,"Default","","",57,null],[13,"Immortal","","",57,null],[13,"Los","","",57,null],[13,"Code","","",57,null],[13,"ReadOnly","","",57,null],[0,"mutator_context","mmtk::plan","",null,null],[3,"MutatorConfig","mmtk::plan::mutator_context","",null,null],[12,"allocator_mapping","","",58,null],[12,"space_mapping","","",58,null],[12,"prepare_func","","",58,null],[12,"release_func","","",58,null],[3,"Mutator","","A mutator is a per-thread data structure that manages …",null,null],[12,"allocators","","",59,null],[12,"barrier","","",59,null],[12,"mutator_tls","","",59,null],[12,"plan","","",59,null],[12,"config","","",59,null],[8,"MutatorContext","","Each GC plan should provide their implementation of a …",null,null],[10,"prepare","","",60,[[["opaquepointer",3]]]],[10,"release","","",60,[[["opaquepointer",3]]]],[10,"alloc","","",60,[[["allocationtype",4]],["address",3]]],[10,"post_alloc","","",60,[[["allocationtype",4],["objectreference",3]]]],[11,"flush_remembered_sets","","",60,[[]]],[11,"flush","","",60,[[]]],[10,"get_tls","","",60,[[],["opaquepointer",3]]],[10,"barrier","","",60,[[],["barrier",8]]],[11,"record_modified_node","","",60,[[["objectreference",3]]]],[11,"record_modified_edge","","",60,[[["address",3]]]],[0,"plan_constraints","mmtk::plan","",null,null],[3,"PlanConstraints","mmtk::plan::plan_constraints","This struct defines plan-specific constraints. Most of …",null,null],[12,"moves_objects","","",61,null],[12,"gc_header_bits","","",61,null],[12,"gc_header_words","","",61,null],[12,"num_specialized_scans","","",61,null],[12,"max_non_los_copy_bytes","","",61,null],[12,"needs_write_barrier","","",61,null],[12,"needs_log_bit_in_header","","",61,null],[12,"needs_log_bit_in_header_num","","",61,null],[12,"needs_linear_scan","","",61,null],[12,"needs_concurrent_workers","","",61,null],[12,"generate_gc_trace","","",61,null],[12,"needs_forward_after_liveness","","",61,null],[11,"default","","",61,[[]]],[0,"tracelocal","mmtk::plan","",null,null],[8,"TraceLocal","mmtk::plan::tracelocal","This trait and its global counterpart implement the core …",null,null],[10,"process_roots","","",62,[[]]],[10,"process_root_edge","","",62,[[["address",3]]]],[10,"trace_object","","",62,[[["objectreference",3]],["objectreference",3]]],[10,"complete_trace","","",62,[[]]],[10,"release","","",62,[[]]],[10,"process_interior_edge","","",62,[[["address",3],["objectreference",3]]]],[11,"overwrite_reference_during_trace","","",62,[[]]],[10,"report_delayed_root_edge","","",62,[[["address",3]]]],[10,"will_not_move_in_current_collection","","",62,[[["objectreference",3]]]],[11,"get_forwarded_reference","","",62,[[["objectreference",3]],["objectreference",3]]],[11,"get_forwarded_referent","","",62,[[["objectreference",3]],["objectreference",3]]],[11,"retain_referent","","",62,[[["objectreference",3]],["objectreference",3]]],[0,"transitive_closure","mmtk::plan","",null,null],[8,"TransitiveClosure","mmtk::plan::transitive_closure","This trait is the fundamental mechanism for performing a …",null,null],[10,"process_edge","","",63,[[["address",3]]]],[10,"process_node","","",63,[[["objectreference",3]]]],[0,"gencopy","mmtk::plan","",null,null],[3,"GenCopy","mmtk::plan::gencopy","",null,null],[12,"nursery","","",64,null],[12,"hi","","",64,null],[12,"copyspace0","","",64,null],[12,"copyspace1","","",64,null],[12,"common","","",64,null],[12,"scheduler","","",64,null],[17,"GENCOPY_CONSTRAINTS","","",null,null],[0,"nogc","mmtk::plan","",null,null],[3,"NoGC","mmtk::plan::nogc","",null,null],[12,"base","","",65,null],[12,"nogc_space","","",65,null],[17,"NOGC_CONSTRAINTS","","",null,null],[0,"semispace","mmtk::plan","",null,null],[3,"SemiSpace","mmtk::plan::semispace","",null,null],[12,"hi","","",66,null],[12,"copyspace0","","",66,null],[12,"copyspace1","","",66,null],[12,"common","","",66,null],[17,"SS_CONSTRAINTS","","",null,null],[0,"policy","mmtk","Memory policies that can be used for spaces.",null,null],[0,"space","mmtk::policy","This class defines and manages spaces.  Each policy is an …",null,null],[8,"SFT","mmtk::policy::space","Space Function Table (SFT).",null,null],[10,"name","","",67,[[]]],[10,"is_live","","",67,[[["objectreference",3]]]],[10,"is_movable","","",67,[[]]],[10,"is_sane","","",67,[[]]],[10,"initialize_header","","",67,[[["objectreference",3]]]],[3,"SFTMap","","",null,null],[11,"new","","",68,[[]]],[11,"get","","",68,[[["address",3]],["sft",8]]],[11,"update","","Update SFT map for the given address range. It should be …",68,[[["address",3]]]],[11,"clear","","",68,[[]]],[8,"Space","","",null,null],[10,"as_space","","",69,[[],["space",8]]],[10,"as_sft","","",69,[[],["sft",8]]],[10,"get_page_resource","","",69,[[],["pageresource",8]]],[10,"init","","",69,[[["vmmap",6]]]],[11,"acquire","","",69,[[["opaquepointer",3]],["address",3]]],[11,"address_in_space","","",69,[[["address",3]]]],[11,"in_space","","",69,[[["objectreference",3]]]],[11,"grow_discontiguous_space","","Safetypotential data race as this mutates \'common\' FIXME: …",69,[[],["address",3]]],[11,"grow_space","","This hook is called by page resources each time a space …",69,[[["address",3]]]],[11,"ensure_mapped","","Ensure this space is marked as mapped -- used when the …",69,[[]]],[11,"reserved_pages","","",69,[[]]],[11,"get_name","","",69,[[]]],[10,"common","","",69,[[],["commonspace",3]]],[11,"common_mut","","",69,[[],["commonspace",3]]],[10,"unsafe_common_mut","","SafetyThis get\'s a mutable reference from self. (i.e. …",69,[[],["commonspace",3]]],[11,"release_discontiguous_chunks","","",69,[[["address",3]]]],[10,"release_multiple_pages","","",69,[[["address",3]]]],[11,"release_all_chunks","","SafetyTODO: I am not sure why this is unsafe.",69,[[]]],[11,"print_vm_map","","",69,[[]]],[11,"is","","Returns true if the trait object wraps an object of type …",69,[[]]],[11,"downcast","","Returns a boxed object from a boxed trait object if the …",69,[[["box",3]],[["result",4],["box",3],["box",3]]]],[11,"downcast_rc","","Returns an <code>Rc</code>-ed object from an <code>Rc</code>-ed trait object if the …",69,[[["rc",3]],[["rc",3],["result",4],["rc",3]]]],[11,"downcast_ref","","Returns a reference to the object within the trait object …",69,[[],["option",4]]],[11,"downcast_mut","","Returns a mutable reference to the object within the …",69,[[],["option",4]]],[3,"CommonSpace","","",null,null],[12,"name","","",70,null],[12,"descriptor","","",70,null],[12,"vmrequest","","",70,null],[12,"contiguous","","",70,null],[12,"zeroed","","",70,null],[12,"start","","",70,null],[12,"extent","","",70,null],[12,"head_discontiguous_region","","",70,null],[12,"vm_map","","",70,null],[12,"mmapper","","",70,null],[3,"SpaceOptions","","",null,null],[12,"name","","",71,null],[12,"movable","","",71,null],[12,"immortal","","",71,null],[12,"zeroed","","",71,null],[12,"vmrequest","","",71,null],[11,"new","","",70,[[["mmapper",6],["heapmeta",3],["spaceoptions",3],["vmmap",6]]]],[11,"init","","",70,[[]]],[11,"vm_map","","",70,[[],["vmmap",6]]],[5,"required_chunks","","",null,[[]]],[0,"copyspace","mmtk::policy","",null,null],[3,"CopySpace","mmtk::policy::copyspace","",null,null],[11,"new","","",72,[[["mmapper",6],["vmrequest",4],["heapmeta",3],["vmmap",6]]]],[11,"prepare","","",72,[[]]],[11,"release","","",72,[[]]],[11,"trace_object","","",72,[[["objectreference",3],["allocationsemantics",4]],["objectreference",3]]],[11,"protect","","",72,[[]]],[11,"unprotect","","",72,[[]]],[0,"immortalspace","mmtk::policy","",null,null],[3,"ImmortalSpace","mmtk::policy::immortalspace","",null,null],[11,"new","","",73,[[["mmapper",6],["vmrequest",4],["heapmeta",3],["vmmap",6],["planconstraints",3]]]],[11,"prepare","","",73,[[]]],[11,"release","","",73,[[]]],[11,"trace_object","","",73,[[["objectreference",3]],["objectreference",3]]],[0,"largeobjectspace","mmtk::policy","",null,null],[3,"LargeObjectSpace","mmtk::policy::largeobjectspace","",null,null],[11,"new","","",74,[[["mmapper",6],["vmrequest",4],["heapmeta",3],["vmmap",6],["planconstraints",3]]]],[11,"prepare","","",74,[[]]],[11,"release","","",74,[[]]],[11,"trace_object","","",74,[[["objectreference",3]],["objectreference",3]]],[11,"allocate_pages","","",74,[[["opaquepointer",3]],["address",3]]],[0,"lockfreeimmortalspace","mmtk::policy","",null,null],[3,"LockFreeImmortalSpace","mmtk::policy::lockfreeimmortalspace","",null,null],[11,"new","","",75,[[]]],[0,"scheduler","mmtk","A general scheduler implementation. MMTk uses it to …",null,null],[0,"stat","mmtk::scheduler","",null,null],[3,"SchedulerStat","mmtk::scheduler::stat","",null,null],[11,"harness_stat","","",76,[[],[["hashmap",3],["string",3]]]],[11,"merge","","",76,[[["workerlocalstat",3]]]],[3,"WorkStat","","",null,null],[11,"end_of_work","","",77,[[["workerlocalstat",3]]]],[3,"WorkerLocalStat","","",null,null],[11,"is_enabled","","",78,[[]]],[11,"enable","","",78,[[]]],[11,"measure_work","","",78,[[["typeid",3]],["workstat",3]]],[0,"gc_works","mmtk::scheduler","",null,null],[3,"ScheduleCollection","mmtk::scheduler::gc_works","",null,null],[3,"Prepare","","GC Preparation Work (include updating global states)",null,null],[12,"plan","","",79,null],[11,"new","","",79,[[]]],[3,"PrepareMutator","","GC Preparation Work (include updating global states)",null,null],[12,"mutator","","",80,null],[11,"new","","",80,[[["mutator",3]]]],[3,"PrepareCollector","","",null,null],[11,"new","","",81,[[]]],[3,"Release","","",null,null],[12,"plan","","",82,null],[11,"new","","",82,[[]]],[3,"ReleaseMutator","","",null,null],[12,"mutator","","",83,null],[11,"new","","",83,[[["mutator",3]]]],[3,"ReleaseCollector","","",null,null],[11,"new","","",84,[[]]],[3,"StopMutators","","Stop all mutators",null,null],[11,"new","","",85,[[]]],[3,"EndOfGC","","",null,null],[3,"ScanStackRoots","","",null,null],[11,"new","","",86,[[]]],[3,"ScanStackRoot","","",null,null],[12,"0","","",87,null],[3,"ScanVMSpecificRoots","","",null,null],[11,"new","","",88,[[]]],[3,"ProcessEdgesBase","","",null,null],[12,"edges","","",89,null],[12,"nodes","","",89,null],[11,"new","","",89,[[["address",3],["mmtk",3],["vec",3]]]],[11,"set_worker","","",89,[[["gcworker",6]]]],[11,"worker","","",89,[[],["gcworker",6]]],[11,"mmtk","","",89,[[],["mmtk",3]]],[11,"plan","","",89,[[],["plan",8]]],[8,"ProcessEdgesWork","","Scan & update a list of object slots",null,null],[16,"VM","","",90,null],[18,"CAPACITY","","",90,null],[18,"OVERWRITE_REFERENCE","","",90,null],[18,"SCAN_OBJECTS_IMMEDIATELY","","",90,null],[10,"new","","",90,[[["address",3],["mmtk",3],["vec",3]]]],[10,"trace_object","","",90,[[["objectreference",3]],["objectreference",3]]],[11,"process_node","","",90,[[["objectreference",3]]]],[11,"flush","","",90,[[]]],[11,"process_edge","","",90,[[["address",3]]]],[11,"process_edges","","",90,[[]]],[3,"ScanObjects","","Scan & update a list of object slots",null,null],[11,"new","","",91,[[["vec",3],["objectreference",3]]]],[3,"ProcessModBuf","","",null,null],[11,"new","","",92,[[["address",3],["vec",3],["vec",3],["objectreference",3]]]],[8,"Context","mmtk::scheduler","The global context for the whole scheduling system. This …",null,null],[11,"spawn_worker","","",93,[[["worker",3],["opaquepointer",3]]]],[8,"WorkerLocal","","Thread-local data for each worker thread.",null,null],[11,"init","","",94,[[["opaquepointer",3]]]],[6,"GCWorkerLocalPtr","","",null,null],[25,"GCWorkerLocal","","",null,null],[4,"CoordinatorMessage","","",null,null],[13,"Work","","",95,null],[13,"AllWorkerParked","","",95,null],[13,"BucketDrained","","",95,null],[3,"Scheduler","","",null,null],[12,"work_buckets","","",96,null],[12,"coordinator_works","","Works for the coordinator thread",96,null],[12,"worker_monitor","","Condition Variable for worker synchronization",96,null],[12,"channel","","A message channel to send new coordinator works and other …",96,null],[6,"MMTkScheduler","","",null,null],[8,"Work","","",null,null],[10,"do_work","","",97,[[["worker",3]]]],[11,"do_work_with_stat","","",97,[[["worker",3]]]],[8,"CoordinatorWork","","A special kind of work that will execute on the …",null,null],[8,"GCWork","","",null,null],[10,"do_work","","",98,[[["gcworker",6],["mmtk",3]]]],[4,"WorkBucketStage","","",null,null],[13,"Unconstrained","","",99,null],[13,"Prepare","","",99,null],[13,"Closure","","",99,null],[13,"Release","","",99,null],[13,"Final","","",99,null],[3,"WorkerLocalPtr","","This struct will be accessed during trace_object(), which …",null,null],[3,"Worker","","",null,null],[12,"tls","","",100,null],[12,"ordinal","","",100,null],[12,"parked","","",100,null],[12,"local_works","","",100,null],[12,"sender","","",100,null],[12,"stat","","",100,null],[6,"GCWorker","","",null,null],[3,"WorkerGroup","","",null,null],[12,"workers","","",101,null],[0,"vm","mmtk","MMTk-to-VM interface: the VMBinding trait.",null,null],[8,"ActivePlan","mmtk::vm","VM-specific methods for the current plan.",null,null],[10,"global","","Return a reference to the current plan.",102,[[],["plan",8]]],[10,"worker","","Return a <code>GCWorker</code> reference for the thread.",102,[[["opaquepointer",3]],["gcworker",6]]],[10,"is_mutator","","Return whether there is a mutator created and associated …",102,[[["opaquepointer",3]]]],[10,"mutator","","Return a <code>Mutator</code> reference for the thread.",102,[[["opaquepointer",3]],["mutator",3]]],[10,"reset_mutator_iterator","","Reset the mutator iterator so that <code>get_next_mutator()</code> …",102,[[]]],[10,"get_next_mutator","","Return the next mutator if there is any. This method …",102,[[],[["option",4],["mutator",3]]]],[11,"mutators","","A utility method to provide a thread-safe mutator …",102,[[],["synchronizedmutatoriterator",3]]],[10,"number_of_mutators","","Return the total count of mutators.",102,[[]]],[8,"Collection","","VM-specific methods for garbage collection.",null,null],[10,"stop_all_mutators","","Stop all the mutator threads. MMTk calls this method when …",103,[[["opaquepointer",3]]]],[10,"resume_mutators","","Resume all the mutator threads, the opposite of the …",103,[[["opaquepointer",3]]]],[10,"block_for_gc","","Block the current thread for GC. This is called when an …",103,[[["opaquepointer",3]]]],[10,"spawn_worker_thread","","Ask the VM to spawn a GC thread for MMTk. A GC thread may …",103,[[["gcworker",6],["option",4],["opaquepointer",3]]]],[10,"prepare_mutator","","Allow VM-specific behaviors for a mutator after all the …",103,[[["opaquepointer",3]]]],[11,"out_of_memory","","Inform the VM for an out-of-memory error. The VM can …",103,[[["opaquepointer",3]]]],[8,"ObjectModel","","VM-specific methods for object model.",null,null],[18,"HAS_GC_BYTE","","Whether an exclusive GC byte in each object\'s header word …",104,null],[18,"GC_BYTE_OFFSET","","The offset of the GC byte from the object reference, in …",104,null],[10,"copy","","Copy an object and return the address of the new object. …",104,[[["objectreference",3],["allocationsemantics",4]],["objectreference",3]]],[10,"copy_to","","Copy an object. This is required for delayed-copy …",104,[[["address",3],["objectreference",3]],["address",3]]],[10,"get_reference_when_copied_to","","Return the reference that an object will be referred to …",104,[[["address",3],["objectreference",3]],["objectreference",3]]],[10,"get_current_size","","Return the size used by an object.",104,[[["objectreference",3]]]],[10,"get_type_descriptor","","Get the type descriptor for an object.",104,[[["objectreference",3]]]],[10,"object_start_ref","","Return the lowest address of the storage associated with …",104,[[["objectreference",3]],["address",3]]],[10,"ref_to_address","","Return an address guaranteed to be inside the storage …",104,[[["objectreference",3]],["address",3]]],[10,"dump_object","","Dump debugging information for an object.",104,[[["objectreference",3]]]],[8,"ReferenceGlue","","VM-specific methods for reference processing.",null,null],[11,"clear_referent","","Weak and soft references always clear the referent before …",105,[[["objectreference",3]]]],[10,"get_referent","","Get the referent from a reference.",105,[[["objectreference",3]],["objectreference",3]]],[10,"set_referent","","Set the referent in a reference.",105,[[["objectreference",3]]]],[10,"process_reference","","Process a reference with the current semantics and return …",105,[[["objectreference",3],["opaquepointer",3]],["objectreference",3]]],[8,"Scanning","","VM-specific methods for scanning roots/objects.",null,null],[18,"SCAN_MUTATORS_IN_SAFEPOINT","","Scan stack roots after all mutators are paused.",106,null],[18,"SINGLE_THREAD_MUTATOR_SCANNING","","Scan all the mutators within a single work packet.",106,null],[10,"scan_object","","Delegated scanning of a object, processing each pointer …",106,[[["objectreference",3],["opaquepointer",3]]]],[10,"notify_initial_thread_scan_complete","","MMTk calls this method at the first time during a …",106,[[["opaquepointer",3]]]],[10,"scan_objects","","Bulk scanning of objects, processing each pointer field …",106,[[["gcworker",6]]]],[10,"scan_thread_roots","","Scan all the mutators for roots.",106,[[]]],[10,"scan_thread_root","","Scan one mutator for roots.",106,[[["mutator",3],["opaquepointer",3]]]],[10,"scan_vm_specific_roots","","Scan VM-specific roots. The creation of all root scan …",106,[[]]],[10,"supports_return_barrier","","Return whether the VM supports return barriers. This is …",106,[[]]],[8,"VMBinding","","The <code>VMBinding</code> trait associates with each trait, and …",null,null],[16,"VMObjectModel","","",107,null],[16,"VMScanning","","",107,null],[16,"VMCollection","","",107,null],[16,"VMActivePlan","","",107,null],[16,"VMReferenceGlue","","",107,null],[18,"ALIGNMENT_VALUE","","A value to fill in alignment gaps. This value can be used …",107,null],[18,"LOG_MIN_ALIGNMENT","","Allowed minimal alignment.",107,null],[18,"MIN_ALIGNMENT","","Allowed minimal alignment in bytes.",107,null],[18,"MAX_ALIGNMENT_SHIFT","","Allowed maximum alignment as shift by min alignment.    ",107,null],[18,"MAX_ALIGNMENT","","Allowed maximum alignment in bytes.",107,null],[18,"ALLOC_END_ALIGNMENT","","This value is used to assert if the cursor is reasonable …",107,null],[0,"memory_manager","mmtk","VM-to-MMTk interface: safe Rust APIs.",null,null],[5,"start_control_collector","mmtk::memory_manager","Run the main loop for the GC controller thread. This …",null,[[["mmtk",3],["opaquepointer",3]]]],[5,"gc_init","","Initialize an MMTk instance. A VM should call this method …",null,[[["mmtk",3]]]],[5,"bind_mutator","","Request MMTk to create a mutator for the given thread. …",null,[[["opaquepointer",3],["mmtk",3]],[["mutator",3],["box",3]]]],[5,"destroy_mutator","","Reclaim a mutator that is no longer needed.",null,[[["mutator",3],["box",3]]]],[5,"flush_mutator","","Flush the mutator\'s local states.",null,[[["mutator",3]]]],[5,"alloc","","Allocate memory for an object. For performance reasons, a …",null,[[["mutator",3],["allocationsemantics",4]],["address",3]]],[5,"post_alloc","","Perform post-allocation actions, usually initializing …",null,[[["allocationsemantics",4],["mutator",3],["objectreference",3]]]],[5,"get_allocator_mapping","","Return an AllocatorSelector for the given allocation …",null,[[["mmtk",3],["allocationsemantics",4]],["allocatorselector",4]]],[5,"start_worker","","Run the main loop of a GC worker. This method does not …",null,[[["mmtk",3],["gcworker",6],["opaquepointer",3]]]],[5,"enable_collection","","Allow MMTk to trigger garbage collection. A VM should …",null,[[["opaquepointer",3],["mmtk",3]]]],[5,"process","","Process MMTk run-time options.",null,[[["mmtk",3]]]],[5,"used_bytes","","Return used memory in bytes.",null,[[["mmtk",3]]]],[5,"free_bytes","","Return free memory in bytes.",null,[[["mmtk",3]]]],[5,"starting_heap_address","","Return the starting address of the heap. <em>Note that …",null,[[],["address",3]]],[5,"last_heap_address","","Return the ending address of the heap. <em>Note that …",null,[[],["address",3]]],[5,"total_bytes","","Return the total memory in bytes.",null,[[["mmtk",3]]]],[5,"handle_user_collection_request","","Trigger a garbage collection as requested by the user.",null,[[["mmtk",3],["opaquepointer",3]]]],[5,"is_live_object","","Is the object alive?",null,[[["objectreference",3]]]],[5,"is_mapped_object","","Is the object in the mapped memory?",null,[[["objectreference",3]]]],[5,"is_mapped_address","","Is the address in the mapped memory?",null,[[["address",3]]]],[5,"modify_check","","Check that if a garbage collection is in progress and if …",null,[[["mmtk",3],["objectreference",3]]]],[5,"add_weak_candidate","","Add a reference to the list of weak references.",null,[[["mmtk",3],["objectreference",3]]]],[5,"add_soft_candidate","","Add a reference to the list of soft references.",null,[[["mmtk",3],["objectreference",3]]]],[5,"add_phantom_candidate","","Add a reference to the list of phantom references.",null,[[["mmtk",3],["objectreference",3]]]],[5,"harness_begin","","Generic hook to allow benchmarks to be harnessed. We do a …",null,[[["mmtk",3],["opaquepointer",3]]]],[5,"harness_end","","Generic hook to allow benchmarks to be harnessed. We stop …",null,[[["mmtk",3]]]],[3,"MMTK","mmtk","An MMTk instance. MMTk allows mutiple instances to run …",null,null],[12,"plan","","",108,null],[12,"vm_map","","",108,null],[12,"mmapper","","",108,null],[12,"sftmap","","",108,null],[12,"reference_processors","","",108,null],[12,"options","","",108,null],[12,"scheduler","","",108,null],[12,"sanity_checker","","",108,null],[11,"from","mmtk::util::address","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"into_any","","",0,[[["global",3],["box",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",0,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",0,[[],["any",8]]],[11,"as_any_mut","","",0,[[],["any",8]]],[11,"into_any_arc","","",0,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"to_string","","",1,[[],["string",3]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"into_any","","",1,[[["global",3],["box",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",1,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",1,[[],["any",8]]],[11,"as_any_mut","","",1,[[],["any",8]]],[11,"into_any_arc","","",1,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","mmtk::util::alloc::allocators","",3,[[]]],[11,"into","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"into_any","","",3,[[["global",3],["box",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",3,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",3,[[],["any",8]]],[11,"as_any_mut","","",3,[[],["any",8]]],[11,"into_any_arc","","",3,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"into_any","","",4,[[["global",3],["box",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",4,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",4,[[],["any",8]]],[11,"as_any_mut","","",4,[[],["any",8]]],[11,"into_any_arc","","",4,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","mmtk::util::alloc","",7,[[]]],[11,"into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"into_any","","",7,[[["global",3],["box",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",7,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",7,[[],["any",8]]],[11,"as_any_mut","","",7,[[],["any",8]]],[11,"into_any_arc","","",7,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","mmtk::util::alloc::dump_linear_scan","",109,[[]]],[11,"into","","",109,[[]]],[11,"borrow","","",109,[[]]],[11,"borrow_mut","","",109,[[]]],[11,"try_from","","",109,[[],["result",4]]],[11,"try_into","","",109,[[],["result",4]]],[11,"type_id","","",109,[[],["typeid",3]]],[11,"into_any","","",109,[[["global",3],["box",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",109,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",109,[[],["any",8]]],[11,"as_any_mut","","",109,[[],["any",8]]],[11,"into_any_arc","","",109,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","mmtk::util::alloc::large_object_allocator","",5,[[]]],[11,"into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"into_any","","",5,[[["global",3],["box",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",5,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",5,[[],["any",8]]],[11,"as_any_mut","","",5,[[],["any",8]]],[11,"into_any_arc","","",5,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","mmtk::util::gc_byte","",110,[[]]],[11,"into","","",110,[[]]],[11,"borrow","","",110,[[]]],[11,"borrow_mut","","",110,[[]]],[11,"try_from","","",110,[[],["result",4]]],[11,"try_into","","",110,[[],["result",4]]],[11,"type_id","","",110,[[],["typeid",3]]],[11,"into_any","","",110,[[["global",3],["box",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",110,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",110,[[],["any",8]]],[11,"as_any_mut","","",110,[[],["any",8]]],[11,"into_any_arc","","",110,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","mmtk::util::header_byte","",9,[[]]],[11,"into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"into_any","","",9,[[["global",3],["box",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",9,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",9,[[],["any",8]]],[11,"as_any_mut","","",9,[[],["any",8]]],[11,"into_any_arc","","",9,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","mmtk::util::heap::layout","",111,[[]]],[11,"into","","",111,[[]]],[11,"borrow","","",111,[[]]],[11,"borrow_mut","","",111,[[]]],[11,"try_from","","",111,[[],["result",4]]],[11,"try_into","","",111,[[],["result",4]]],[11,"type_id","","",111,[[],["typeid",3]]],[11,"into_any","","",111,[[["global",3],["box",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",111,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",111,[[],["any",8]]],[11,"as_any_mut","","",111,[[],["any",8]]],[11,"into_any_arc","","",111,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","mmtk::util::heap::layout::map64","",112,[[]]],[11,"into","","",112,[[]]],[11,"borrow","","",112,[[]]],[11,"borrow_mut","","",112,[[]]],[11,"try_from","","",112,[[],["result",4]]],[11,"try_into","","",112,[[],["result",4]]],[11,"type_id","","",112,[[],["typeid",3]]],[11,"into_any","","",112,[[["global",3],["box",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",112,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",112,[[],["any",8]]],[11,"as_any_mut","","",112,[[],["any",8]]],[11,"into_any_arc","","",112,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","mmtk::util::heap::freelistpageresource","",12,[[]]],[11,"into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"into_any","","",12,[[["global",3],["box",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",12,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",12,[[],["any",8]]],[11,"as_any_mut","","",12,[[],["any",8]]],[11,"into_any_arc","","",12,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"into_any","","",13,[[["global",3],["box",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",13,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",13,[[],["any",8]]],[11,"as_any_mut","","",13,[[],["any",8]]],[11,"into_any_arc","","",13,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","mmtk::util::heap","",20,[[]]],[11,"into","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"into_any","","",20,[[["global",3],["box",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",20,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",20,[[],["any",8]]],[11,"as_any_mut","","",20,[[],["any",8]]],[11,"into_any_arc","","",20,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","mmtk::util::heap::monotonepageresource","",16,[[]]],[11,"into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"into_any","","",16,[[["global",3],["box",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",16,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",16,[[],["any",8]]],[11,"as_any_mut","","",16,[[],["any",8]]],[11,"into_any_arc","","",16,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"into_any","","",14,[[["global",3],["box",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",14,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",14,[[],["any",8]]],[11,"as_any_mut","","",14,[[],["any",8]]],[11,"into_any_arc","","",14,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","mmtk::util::heap::pageresource","",18,[[]]],[11,"into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"into_any","","",18,[[["global",3],["box",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",18,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",18,[[],["any",8]]],[11,"as_any_mut","","",18,[[],["any",8]]],[11,"into_any_arc","","",18,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","mmtk::util::heap::space_descriptor","",19,[[]]],[11,"into","","",19,[[]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"into_any","","",19,[[["global",3],["box",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",19,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",19,[[],["any",8]]],[11,"as_any_mut","","",19,[[],["any",8]]],[11,"into_any_arc","","",19,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","mmtk::util::heap","",21,[[]]],[11,"into","","",21,[[]]],[11,"to_owned","","",21,[[]]],[11,"clone_into","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"into_any","","",21,[[["global",3],["box",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",21,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",21,[[],["any",8]]],[11,"as_any_mut","","",21,[[],["any",8]]],[11,"into_any_arc","","",21,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","mmtk::util::int_array_freelist","",25,[[]]],[11,"into","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"into_any","","",25,[[["global",3],["box",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",25,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",25,[[],["any",8]]],[11,"as_any_mut","","",25,[[],["any",8]]],[11,"into_any_arc","","",25,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","mmtk::util::opaque_pointer","",26,[[]]],[11,"into","","",26,[[]]],[11,"to_owned","","",26,[[]]],[11,"clone_into","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"into_any","","",26,[[["global",3],["box",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",26,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",26,[[],["any",8]]],[11,"as_any_mut","","",26,[[],["any",8]]],[11,"into_any_arc","","",26,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","mmtk::util::options","",27,[[]]],[11,"into","","",27,[[]]],[11,"to_owned","","",27,[[]]],[11,"clone_into","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"into_any","","",27,[[["global",3],["box",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",27,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",27,[[],["any",8]]],[11,"as_any_mut","","",27,[[],["any",8]]],[11,"into_any_arc","","",27,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"to_owned","","",28,[[]]],[11,"clone_into","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"into_any","","",28,[[["global",3],["box",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",28,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",28,[[],["any",8]]],[11,"as_any_mut","","",28,[[],["any",8]]],[11,"into_any_arc","","",28,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"into_any","","",29,[[["global",3],["box",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",29,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",29,[[],["any",8]]],[11,"as_any_mut","","",29,[[],["any",8]]],[11,"into_any_arc","","",29,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"into_any","","",30,[[["global",3],["box",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",30,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",30,[[],["any",8]]],[11,"as_any_mut","","",30,[[],["any",8]]],[11,"into_any_arc","","",30,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","mmtk::util::raw_memory_freelist","",31,[[]]],[11,"into","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"into_any","","",31,[[["global",3],["box",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",31,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",31,[[],["any",8]]],[11,"as_any_mut","","",31,[[],["any",8]]],[11,"into_any_arc","","",31,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","mmtk::util::reference_processor","",32,[[]]],[11,"into","","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"into_any","","",32,[[["global",3],["box",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",32,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",32,[[],["any",8]]],[11,"as_any_mut","","",32,[[],["any",8]]],[11,"into_any_arc","","",32,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"into_any","","",34,[[["global",3],["box",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",34,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",34,[[],["any",8]]],[11,"as_any_mut","","",34,[[],["any",8]]],[11,"into_any_arc","","",34,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"into_any","","",33,[[["global",3],["box",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",33,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",33,[[],["any",8]]],[11,"as_any_mut","","",33,[[],["any",8]]],[11,"into_any_arc","","",33,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","mmtk::util::sanity::sanity_checker","",35,[[]]],[11,"into","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"into_any","","",35,[[["global",3],["box",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",35,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",35,[[],["any",8]]],[11,"as_any_mut","","",35,[[],["any",8]]],[11,"into_any_arc","","",35,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"into_any","","",36,[[["global",3],["box",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",36,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",36,[[],["any",8]]],[11,"as_any_mut","","",36,[[],["any",8]]],[11,"into_any_arc","","",36,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"into_any","","",37,[[["global",3],["box",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",37,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",37,[[],["any",8]]],[11,"as_any_mut","","",37,[[],["any",8]]],[11,"into_any_arc","","",37,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",38,[[]]],[11,"into","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"into_any","","",38,[[["global",3],["box",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",38,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",38,[[],["any",8]]],[11,"as_any_mut","","",38,[[],["any",8]]],[11,"into_any_arc","","",38,[[["arc",3]],[["any",8],["arc",3]]]],[11,"process_edge","","",113,[[["address",3]]]],[11,"process_node","","",113,[[["objectreference",3]]]],[11,"from","","",113,[[]]],[11,"into","","",113,[[]]],[11,"borrow","","",113,[[]]],[11,"borrow_mut","","",113,[[]]],[11,"try_from","","",113,[[],["result",4]]],[11,"try_into","","",113,[[],["result",4]]],[11,"type_id","","",113,[[],["typeid",3]]],[11,"into_any","","",113,[[["global",3],["box",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",113,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",113,[[],["any",8]]],[11,"as_any_mut","","",113,[[],["any",8]]],[11,"into_any_arc","","",113,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","mmtk::util::statistics::counter","",114,[[]]],[11,"into","","",114,[[]]],[11,"borrow","","",114,[[]]],[11,"borrow_mut","","",114,[[]]],[11,"try_from","","",114,[[],["result",4]]],[11,"try_into","","",114,[[],["result",4]]],[11,"type_id","","",114,[[],["typeid",3]]],[11,"into_any","","",114,[[["global",3],["box",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",114,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",114,[[],["any",8]]],[11,"as_any_mut","","",114,[[],["any",8]]],[11,"into_any_arc","","",114,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"into_any","","",41,[[["global",3],["box",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",41,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",41,[[],["any",8]]],[11,"as_any_mut","","",41,[[],["any",8]]],[11,"into_any_arc","","",41,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","mmtk::util::statistics::stats","",42,[[]]],[11,"into","","",42,[[]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"into_any","","",42,[[["global",3],["box",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",42,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",42,[[],["any",8]]],[11,"as_any_mut","","",42,[[],["any",8]]],[11,"into_any_arc","","",42,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",43,[[]]],[11,"into","","",43,[[]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"into_any","","",43,[[["global",3],["box",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",43,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",43,[[],["any",8]]],[11,"as_any_mut","","",43,[[],["any",8]]],[11,"into_any_arc","","",43,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","mmtk::util","",115,[[]]],[11,"into","","",115,[[]]],[11,"borrow","","",115,[[]]],[11,"borrow_mut","","",115,[[]]],[11,"try_from","","",115,[[],["result",4]]],[11,"try_into","","",115,[[],["result",4]]],[11,"type_id","","",115,[[],["typeid",3]]],[11,"into_any","","",115,[[["global",3],["box",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",115,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",115,[[],["any",8]]],[11,"as_any_mut","","",115,[[],["any",8]]],[11,"into_any_arc","","",115,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","mmtk::util::treadmill","",44,[[]]],[11,"into","","",44,[[]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"into_any","","",44,[[["global",3],["box",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",44,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",44,[[],["any",8]]],[11,"as_any_mut","","",44,[[],["any",8]]],[11,"into_any_arc","","",44,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","mmtk","",108,[[]]],[11,"into","","",108,[[]]],[11,"borrow","","",108,[[]]],[11,"borrow_mut","","",108,[[]]],[11,"try_from","","",108,[[],["result",4]]],[11,"try_into","","",108,[[],["result",4]]],[11,"type_id","","",108,[[],["typeid",3]]],[11,"into_any","","",108,[[["global",3],["box",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",108,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",108,[[],["any",8]]],[11,"as_any_mut","","",108,[[],["any",8]]],[11,"into_any_arc","","",108,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","mmtk::plan::barriers","",45,[[]]],[11,"into","","",45,[[]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"into_any","","",45,[[["global",3],["box",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",45,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",45,[[],["any",8]]],[11,"as_any_mut","","",45,[[],["any",8]]],[11,"into_any_arc","","",45,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",116,[[]]],[11,"into","","",116,[[]]],[11,"borrow","","",116,[[]]],[11,"borrow_mut","","",116,[[]]],[11,"try_from","","",116,[[],["result",4]]],[11,"try_into","","",116,[[],["result",4]]],[11,"type_id","","",116,[[],["typeid",3]]],[11,"into_any","","",116,[[["global",3],["box",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",116,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",116,[[],["any",8]]],[11,"as_any_mut","","",116,[[],["any",8]]],[11,"into_any_arc","","",116,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",117,[[]]],[11,"into","","",117,[[]]],[11,"borrow","","",117,[[]]],[11,"borrow_mut","","",117,[[]]],[11,"try_from","","",117,[[],["result",4]]],[11,"try_into","","",117,[[],["result",4]]],[11,"type_id","","",117,[[],["typeid",3]]],[11,"into_any","","",117,[[["global",3],["box",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",117,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",117,[[],["any",8]]],[11,"as_any_mut","","",117,[[],["any",8]]],[11,"into_any_arc","","",117,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",47,[[]]],[11,"into","","",47,[[]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"into_any","","",47,[[["global",3],["box",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",47,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",47,[[],["any",8]]],[11,"as_any_mut","","",47,[[],["any",8]]],[11,"into_any_arc","","",47,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","mmtk::plan::controller_collector_context","",48,[[]]],[11,"into","","",48,[[]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"into_any","","",48,[[["global",3],["box",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",48,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",48,[[],["any",8]]],[11,"as_any_mut","","",48,[[],["any",8]]],[11,"into_any_arc","","",48,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","mmtk::plan::global","",50,[[]]],[11,"into","","",50,[[]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"into_any","","",50,[[["global",3],["box",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",50,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",50,[[],["any",8]]],[11,"as_any_mut","","",50,[[],["any",8]]],[11,"into_any_arc","","",50,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",52,[[]]],[11,"into","","",52,[[]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"try_into","","",52,[[],["result",4]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"into_any","","",52,[[["global",3],["box",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",52,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",52,[[],["any",8]]],[11,"as_any_mut","","",52,[[],["any",8]]],[11,"into_any_arc","","",52,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",53,[[]]],[11,"into","","",53,[[]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"try_into","","",53,[[],["result",4]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"into_any","","",53,[[["global",3],["box",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",53,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",53,[[],["any",8]]],[11,"as_any_mut","","",53,[[],["any",8]]],[11,"from","","",54,[[]]],[11,"into","","",54,[[]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"try_into","","",54,[[],["result",4]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"into_any","","",54,[[["global",3],["box",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",54,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",54,[[],["any",8]]],[11,"as_any_mut","","",54,[[],["any",8]]],[11,"into_any_arc","","",54,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",55,[[]]],[11,"into","","",55,[[]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"try_into","","",55,[[],["result",4]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"into_any","","",55,[[["global",3],["box",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",55,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",55,[[],["any",8]]],[11,"as_any_mut","","",55,[[],["any",8]]],[11,"from","","",56,[[]]],[11,"into","","",56,[[]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"try_into","","",56,[[],["result",4]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"into_any","","",56,[[["global",3],["box",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",56,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",56,[[],["any",8]]],[11,"as_any_mut","","",56,[[],["any",8]]],[11,"into_any_arc","","",56,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",57,[[]]],[11,"into","","",57,[[]]],[11,"to_owned","","",57,[[]]],[11,"clone_into","","",57,[[]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"try_into","","",57,[[],["result",4]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"into_any","","",57,[[["global",3],["box",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",57,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",57,[[],["any",8]]],[11,"as_any_mut","","",57,[[],["any",8]]],[11,"into_any_arc","","",57,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","mmtk::plan::mutator_context","",58,[[]]],[11,"into","","",58,[[]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"try_into","","",58,[[],["result",4]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"into_any","","",58,[[["global",3],["box",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",58,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",58,[[],["any",8]]],[11,"as_any_mut","","",58,[[],["any",8]]],[11,"into_any_arc","","",58,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",59,[[]]],[11,"into","","",59,[[]]],[11,"borrow","","",59,[[]]],[11,"borrow_mut","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"try_into","","",59,[[],["result",4]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"into_any","","",59,[[["global",3],["box",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",59,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",59,[[],["any",8]]],[11,"as_any_mut","","",59,[[],["any",8]]],[11,"into_any_arc","","",59,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","mmtk::plan::plan_constraints","",61,[[]]],[11,"into","","",61,[[]]],[11,"borrow","","",61,[[]]],[11,"borrow_mut","","",61,[[]]],[11,"try_from","","",61,[[],["result",4]]],[11,"try_into","","",61,[[],["result",4]]],[11,"type_id","","",61,[[],["typeid",3]]],[11,"into_any","","",61,[[["global",3],["box",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",61,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",61,[[],["any",8]]],[11,"as_any_mut","","",61,[[],["any",8]]],[11,"into_any_arc","","",61,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","mmtk::plan::gencopy","",64,[[]]],[11,"into","","",64,[[]]],[11,"borrow","","",64,[[]]],[11,"borrow_mut","","",64,[[]]],[11,"try_from","","",64,[[],["result",4]]],[11,"try_into","","",64,[[],["result",4]]],[11,"type_id","","",64,[[],["typeid",3]]],[11,"into_any","","",64,[[["global",3],["box",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",64,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",64,[[],["any",8]]],[11,"as_any_mut","","",64,[[],["any",8]]],[11,"into_any_arc","","",64,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","mmtk::plan::nogc","",65,[[]]],[11,"into","","",65,[[]]],[11,"borrow","","",65,[[]]],[11,"borrow_mut","","",65,[[]]],[11,"try_from","","",65,[[],["result",4]]],[11,"try_into","","",65,[[],["result",4]]],[11,"type_id","","",65,[[],["typeid",3]]],[11,"into_any","","",65,[[["global",3],["box",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",65,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",65,[[],["any",8]]],[11,"as_any_mut","","",65,[[],["any",8]]],[11,"into_any_arc","","",65,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","mmtk::plan::semispace","",66,[[]]],[11,"into","","",66,[[]]],[11,"borrow","","",66,[[]]],[11,"borrow_mut","","",66,[[]]],[11,"try_from","","",66,[[],["result",4]]],[11,"try_into","","",66,[[],["result",4]]],[11,"type_id","","",66,[[],["typeid",3]]],[11,"into_any","","",66,[[["global",3],["box",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",66,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",66,[[],["any",8]]],[11,"as_any_mut","","",66,[[],["any",8]]],[11,"into_any_arc","","",66,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","mmtk::policy::space","",68,[[]]],[11,"into","","",68,[[]]],[11,"borrow","","",68,[[]]],[11,"borrow_mut","","",68,[[]]],[11,"try_from","","",68,[[],["result",4]]],[11,"try_into","","",68,[[],["result",4]]],[11,"type_id","","",68,[[],["typeid",3]]],[11,"into_any","","",68,[[["global",3],["box",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",68,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",68,[[],["any",8]]],[11,"as_any_mut","","",68,[[],["any",8]]],[11,"into_any_arc","","",68,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",70,[[]]],[11,"into","","",70,[[]]],[11,"borrow","","",70,[[]]],[11,"borrow_mut","","",70,[[]]],[11,"try_from","","",70,[[],["result",4]]],[11,"try_into","","",70,[[],["result",4]]],[11,"type_id","","",70,[[],["typeid",3]]],[11,"into_any","","",70,[[["global",3],["box",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",70,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",70,[[],["any",8]]],[11,"as_any_mut","","",70,[[],["any",8]]],[11,"into_any_arc","","",70,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",71,[[]]],[11,"into","","",71,[[]]],[11,"borrow","","",71,[[]]],[11,"borrow_mut","","",71,[[]]],[11,"try_from","","",71,[[],["result",4]]],[11,"try_into","","",71,[[],["result",4]]],[11,"type_id","","",71,[[],["typeid",3]]],[11,"into_any","","",71,[[["global",3],["box",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",71,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",71,[[],["any",8]]],[11,"as_any_mut","","",71,[[],["any",8]]],[11,"into_any_arc","","",71,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","mmtk::policy::copyspace","",72,[[]]],[11,"into","","",72,[[]]],[11,"borrow","","",72,[[]]],[11,"borrow_mut","","",72,[[]]],[11,"try_from","","",72,[[],["result",4]]],[11,"try_into","","",72,[[],["result",4]]],[11,"type_id","","",72,[[],["typeid",3]]],[11,"into_any","","",72,[[["global",3],["box",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",72,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",72,[[],["any",8]]],[11,"as_any_mut","","",72,[[],["any",8]]],[11,"into_any_arc","","",72,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","mmtk::policy::immortalspace","",73,[[]]],[11,"into","","",73,[[]]],[11,"borrow","","",73,[[]]],[11,"borrow_mut","","",73,[[]]],[11,"try_from","","",73,[[],["result",4]]],[11,"try_into","","",73,[[],["result",4]]],[11,"type_id","","",73,[[],["typeid",3]]],[11,"into_any","","",73,[[["global",3],["box",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",73,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",73,[[],["any",8]]],[11,"as_any_mut","","",73,[[],["any",8]]],[11,"into_any_arc","","",73,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","mmtk::policy::largeobjectspace","",74,[[]]],[11,"into","","",74,[[]]],[11,"borrow","","",74,[[]]],[11,"borrow_mut","","",74,[[]]],[11,"try_from","","",74,[[],["result",4]]],[11,"try_into","","",74,[[],["result",4]]],[11,"type_id","","",74,[[],["typeid",3]]],[11,"into_any","","",74,[[["global",3],["box",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",74,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",74,[[],["any",8]]],[11,"as_any_mut","","",74,[[],["any",8]]],[11,"into_any_arc","","",74,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","mmtk::policy::lockfreeimmortalspace","",75,[[]]],[11,"into","","",75,[[]]],[11,"borrow","","",75,[[]]],[11,"borrow_mut","","",75,[[]]],[11,"try_from","","",75,[[],["result",4]]],[11,"try_into","","",75,[[],["result",4]]],[11,"type_id","","",75,[[],["typeid",3]]],[11,"into_any","","",75,[[["global",3],["box",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",75,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",75,[[],["any",8]]],[11,"as_any_mut","","",75,[[],["any",8]]],[11,"into_any_arc","","",75,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","mmtk::scheduler","",95,[[]]],[11,"into","","",95,[[]]],[11,"borrow","","",95,[[]]],[11,"borrow_mut","","",95,[[]]],[11,"try_from","","",95,[[],["result",4]]],[11,"try_into","","",95,[[],["result",4]]],[11,"type_id","","",95,[[],["typeid",3]]],[11,"into_any","","",95,[[["global",3],["box",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",95,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",95,[[],["any",8]]],[11,"as_any_mut","","",95,[[],["any",8]]],[11,"into_any_arc","","",95,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",96,[[]]],[11,"into","","",96,[[]]],[11,"borrow","","",96,[[]]],[11,"borrow_mut","","",96,[[]]],[11,"try_from","","",96,[[],["result",4]]],[11,"try_into","","",96,[[],["result",4]]],[11,"type_id","","",96,[[],["typeid",3]]],[11,"into_any","","",96,[[["global",3],["box",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",96,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",96,[[],["any",8]]],[11,"as_any_mut","","",96,[[],["any",8]]],[11,"into_any_arc","","",96,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","mmtk::scheduler::stat","",76,[[]]],[11,"into","","",76,[[]]],[11,"borrow","","",76,[[]]],[11,"borrow_mut","","",76,[[]]],[11,"try_from","","",76,[[],["result",4]]],[11,"try_into","","",76,[[],["result",4]]],[11,"type_id","","",76,[[],["typeid",3]]],[11,"into_any","","",76,[[["global",3],["box",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",76,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",76,[[],["any",8]]],[11,"as_any_mut","","",76,[[],["any",8]]],[11,"into_any_arc","","",76,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",77,[[]]],[11,"into","","",77,[[]]],[11,"borrow","","",77,[[]]],[11,"borrow_mut","","",77,[[]]],[11,"try_from","","",77,[[],["result",4]]],[11,"try_into","","",77,[[],["result",4]]],[11,"type_id","","",77,[[],["typeid",3]]],[11,"into_any","","",77,[[["global",3],["box",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",77,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",77,[[],["any",8]]],[11,"as_any_mut","","",77,[[],["any",8]]],[11,"into_any_arc","","",77,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",78,[[]]],[11,"into","","",78,[[]]],[11,"borrow","","",78,[[]]],[11,"borrow_mut","","",78,[[]]],[11,"try_from","","",78,[[],["result",4]]],[11,"try_into","","",78,[[],["result",4]]],[11,"type_id","","",78,[[],["typeid",3]]],[11,"into_any","","",78,[[["global",3],["box",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",78,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",78,[[],["any",8]]],[11,"as_any_mut","","",78,[[],["any",8]]],[11,"into_any_arc","","",78,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","mmtk::scheduler","",99,[[]]],[11,"into","","",99,[[]]],[11,"to_owned","","",99,[[]]],[11,"clone_into","","",99,[[]]],[11,"borrow","","",99,[[]]],[11,"borrow_mut","","",99,[[]]],[11,"try_from","","",99,[[],["result",4]]],[11,"try_into","","",99,[[],["result",4]]],[11,"type_id","","",99,[[],["typeid",3]]],[11,"into_any","","",99,[[["global",3],["box",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",99,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",99,[[],["any",8]]],[11,"as_any_mut","","",99,[[],["any",8]]],[11,"into_any_arc","","",99,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",118,[[]]],[11,"into","","",118,[[]]],[11,"to_owned","","",118,[[]]],[11,"clone_into","","",118,[[]]],[11,"borrow","","",118,[[]]],[11,"borrow_mut","","",118,[[]]],[11,"try_from","","",118,[[],["result",4]]],[11,"try_into","","",118,[[],["result",4]]],[11,"type_id","","",118,[[],["typeid",3]]],[11,"into_any","","",118,[[["global",3],["box",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",118,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",118,[[],["any",8]]],[11,"as_any_mut","","",118,[[],["any",8]]],[11,"into_any_arc","","",118,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",100,[[]]],[11,"into","","",100,[[]]],[11,"borrow","","",100,[[]]],[11,"borrow_mut","","",100,[[]]],[11,"try_from","","",100,[[],["result",4]]],[11,"try_into","","",100,[[],["result",4]]],[11,"type_id","","",100,[[],["typeid",3]]],[11,"into_any","","",100,[[["global",3],["box",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",100,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",100,[[],["any",8]]],[11,"as_any_mut","","",100,[[],["any",8]]],[11,"into_any_arc","","",100,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",101,[[]]],[11,"into","","",101,[[]]],[11,"borrow","","",101,[[]]],[11,"borrow_mut","","",101,[[]]],[11,"try_from","","",101,[[],["result",4]]],[11,"try_into","","",101,[[],["result",4]]],[11,"type_id","","",101,[[],["typeid",3]]],[11,"into_any","","",101,[[["global",3],["box",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",101,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",101,[[],["any",8]]],[11,"as_any_mut","","",101,[[],["any",8]]],[11,"into_any_arc","","",101,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","mmtk::scheduler::gc_works","",119,[[]]],[11,"into","","",119,[[]]],[11,"borrow","","",119,[[]]],[11,"borrow_mut","","",119,[[]]],[11,"try_from","","",119,[[],["result",4]]],[11,"try_into","","",119,[[],["result",4]]],[11,"type_id","","",119,[[],["typeid",3]]],[11,"into_any","","",119,[[["global",3],["box",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",119,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",119,[[],["any",8]]],[11,"as_any_mut","","",119,[[],["any",8]]],[11,"into_any_arc","","",119,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",79,[[]]],[11,"into","","",79,[[]]],[11,"borrow","","",79,[[]]],[11,"borrow_mut","","",79,[[]]],[11,"try_from","","",79,[[],["result",4]]],[11,"try_into","","",79,[[],["result",4]]],[11,"type_id","","",79,[[],["typeid",3]]],[11,"into_any","","",79,[[["global",3],["box",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",79,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",79,[[],["any",8]]],[11,"as_any_mut","","",79,[[],["any",8]]],[11,"into_any_arc","","",79,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",80,[[]]],[11,"into","","",80,[[]]],[11,"borrow","","",80,[[]]],[11,"borrow_mut","","",80,[[]]],[11,"try_from","","",80,[[],["result",4]]],[11,"try_into","","",80,[[],["result",4]]],[11,"type_id","","",80,[[],["typeid",3]]],[11,"into_any","","",80,[[["global",3],["box",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",80,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",80,[[],["any",8]]],[11,"as_any_mut","","",80,[[],["any",8]]],[11,"into_any_arc","","",80,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",81,[[]]],[11,"into","","",81,[[]]],[11,"borrow","","",81,[[]]],[11,"borrow_mut","","",81,[[]]],[11,"try_from","","",81,[[],["result",4]]],[11,"try_into","","",81,[[],["result",4]]],[11,"type_id","","",81,[[],["typeid",3]]],[11,"into_any","","",81,[[["global",3],["box",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",81,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",81,[[],["any",8]]],[11,"as_any_mut","","",81,[[],["any",8]]],[11,"into_any_arc","","",81,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",82,[[]]],[11,"into","","",82,[[]]],[11,"borrow","","",82,[[]]],[11,"borrow_mut","","",82,[[]]],[11,"try_from","","",82,[[],["result",4]]],[11,"try_into","","",82,[[],["result",4]]],[11,"type_id","","",82,[[],["typeid",3]]],[11,"into_any","","",82,[[["global",3],["box",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",82,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",82,[[],["any",8]]],[11,"as_any_mut","","",82,[[],["any",8]]],[11,"into_any_arc","","",82,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",83,[[]]],[11,"into","","",83,[[]]],[11,"borrow","","",83,[[]]],[11,"borrow_mut","","",83,[[]]],[11,"try_from","","",83,[[],["result",4]]],[11,"try_into","","",83,[[],["result",4]]],[11,"type_id","","",83,[[],["typeid",3]]],[11,"into_any","","",83,[[["global",3],["box",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",83,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",83,[[],["any",8]]],[11,"as_any_mut","","",83,[[],["any",8]]],[11,"into_any_arc","","",83,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",84,[[]]],[11,"into","","",84,[[]]],[11,"borrow","","",84,[[]]],[11,"borrow_mut","","",84,[[]]],[11,"try_from","","",84,[[],["result",4]]],[11,"try_into","","",84,[[],["result",4]]],[11,"type_id","","",84,[[],["typeid",3]]],[11,"into_any","","",84,[[["global",3],["box",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",84,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",84,[[],["any",8]]],[11,"as_any_mut","","",84,[[],["any",8]]],[11,"into_any_arc","","",84,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",85,[[]]],[11,"into","","",85,[[]]],[11,"borrow","","",85,[[]]],[11,"borrow_mut","","",85,[[]]],[11,"try_from","","",85,[[],["result",4]]],[11,"try_into","","",85,[[],["result",4]]],[11,"type_id","","",85,[[],["typeid",3]]],[11,"into_any","","",85,[[["global",3],["box",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",85,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",85,[[],["any",8]]],[11,"as_any_mut","","",85,[[],["any",8]]],[11,"into_any_arc","","",85,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",120,[[]]],[11,"into","","",120,[[]]],[11,"borrow","","",120,[[]]],[11,"borrow_mut","","",120,[[]]],[11,"try_from","","",120,[[],["result",4]]],[11,"try_into","","",120,[[],["result",4]]],[11,"type_id","","",120,[[],["typeid",3]]],[11,"into_any","","",120,[[["global",3],["box",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",120,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",120,[[],["any",8]]],[11,"as_any_mut","","",120,[[],["any",8]]],[11,"into_any_arc","","",120,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",86,[[]]],[11,"into","","",86,[[]]],[11,"borrow","","",86,[[]]],[11,"borrow_mut","","",86,[[]]],[11,"try_from","","",86,[[],["result",4]]],[11,"try_into","","",86,[[],["result",4]]],[11,"type_id","","",86,[[],["typeid",3]]],[11,"into_any","","",86,[[["global",3],["box",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",86,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",86,[[],["any",8]]],[11,"as_any_mut","","",86,[[],["any",8]]],[11,"into_any_arc","","",86,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",87,[[]]],[11,"into","","",87,[[]]],[11,"borrow","","",87,[[]]],[11,"borrow_mut","","",87,[[]]],[11,"try_from","","",87,[[],["result",4]]],[11,"try_into","","",87,[[],["result",4]]],[11,"type_id","","",87,[[],["typeid",3]]],[11,"into_any","","",87,[[["global",3],["box",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",87,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",87,[[],["any",8]]],[11,"as_any_mut","","",87,[[],["any",8]]],[11,"into_any_arc","","",87,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",88,[[]]],[11,"into","","",88,[[]]],[11,"borrow","","",88,[[]]],[11,"borrow_mut","","",88,[[]]],[11,"try_from","","",88,[[],["result",4]]],[11,"try_into","","",88,[[],["result",4]]],[11,"type_id","","",88,[[],["typeid",3]]],[11,"into_any","","",88,[[["global",3],["box",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",88,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",88,[[],["any",8]]],[11,"as_any_mut","","",88,[[],["any",8]]],[11,"into_any_arc","","",88,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",89,[[]]],[11,"into","","",89,[[]]],[11,"borrow","","",89,[[]]],[11,"borrow_mut","","",89,[[]]],[11,"try_from","","",89,[[],["result",4]]],[11,"try_into","","",89,[[],["result",4]]],[11,"type_id","","",89,[[],["typeid",3]]],[11,"into_any","","",89,[[["global",3],["box",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",89,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",89,[[],["any",8]]],[11,"as_any_mut","","",89,[[],["any",8]]],[11,"into_any_arc","","",89,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",91,[[]]],[11,"into","","",91,[[]]],[11,"borrow","","",91,[[]]],[11,"borrow_mut","","",91,[[]]],[11,"try_from","","",91,[[],["result",4]]],[11,"try_into","","",91,[[],["result",4]]],[11,"type_id","","",91,[[],["typeid",3]]],[11,"into_any","","",91,[[["global",3],["box",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",91,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",91,[[],["any",8]]],[11,"as_any_mut","","",91,[[],["any",8]]],[11,"into_any_arc","","",91,[[["arc",3]],[["any",8],["arc",3]]]],[11,"from","","",92,[[]]],[11,"into","","",92,[[]]],[11,"borrow","","",92,[[]]],[11,"borrow_mut","","",92,[[]]],[11,"try_from","","",92,[[],["result",4]]],[11,"try_into","","",92,[[],["result",4]]],[11,"type_id","","",92,[[],["typeid",3]]],[11,"into_any","","",92,[[["global",3],["box",3]],[["box",3],["any",8],["global",3]]]],[11,"into_any_rc","","",92,[[["rc",3]],[["rc",3],["any",8]]]],[11,"as_any","","",92,[[],["any",8]]],[11,"as_any_mut","","",92,[[],["any",8]]],[11,"into_any_arc","","",92,[[["arc",3]],[["any",8],["arc",3]]]],[11,"get_space","mmtk::util::alloc","",7,[[],[["option",4],["space",8]]]],[11,"get_plan","","",7,[[],["plan",8]]],[11,"alloc","","",7,[[],["address",3]]],[11,"alloc_slow_once","","",7,[[],["address",3]]],[11,"get_tls","","",7,[[],["opaquepointer",3]]],[11,"get_tls","mmtk::util::alloc::large_object_allocator","",5,[[],["opaquepointer",3]]],[11,"get_plan","","",5,[[],["plan",8]]],[11,"get_space","","",5,[[],[["option",4],["space",8]]]],[11,"alloc","","",5,[[],["address",3]]],[11,"alloc_slow","","",5,[[],["address",3]]],[11,"alloc_slow_once","","",5,[[],["address",3]]],[11,"scan","mmtk::util::alloc::dump_linear_scan","",109,[[["objectreference",3]]]],[11,"head","mmtk::util::int_array_freelist","",25,[[]]],[11,"heads","","",25,[[]]],[11,"get_entry","","",25,[[]]],[11,"set_entry","","",25,[[]]],[11,"head","mmtk::util::raw_memory_freelist","",31,[[]]],[11,"heads","","",31,[[]]],[11,"get_entry","","",31,[[]]],[11,"set_entry","","",31,[[]]],[11,"alloc","","",31,[[]]],[11,"eagerly_mmap_all_spaces","mmtk::util::heap::layout","",111,[[]]],[11,"mark_as_mapped","","",111,[[["address",3]]]],[11,"ensure_mapped","","",111,[[["address",3]]]],[11,"is_mapped_address","","Return {@code true} if the given address has been mmapped",111,[[["address",3]]]],[11,"protect","","",111,[[["address",3]]]],[11,"new","mmtk::util::heap::layout::map64","",112,[[]]],[11,"insert","","",112,[[["address",3],["spacedescriptor",3]]]],[11,"create_freelist","","",112,[[["commonfreelistpageresource",3]],["box",3]]],[11,"create_parent_freelist","","",112,[[["commonfreelistpageresource",3]],["box",3]]],[11,"allocate_contiguous_chunks","","",112,[[["address",3],["spacedescriptor",3]],["address",3]]],[11,"get_next_contiguous_region","","",112,[[["address",3]],["address",3]]],[11,"get_contiguous_region_chunks","","",112,[[["address",3]]]],[11,"get_contiguous_region_size","","",112,[[["address",3]]]],[11,"free_all_chunks","","",112,[[["address",3]]]],[11,"free_contiguous_chunks","","",112,[[["address",3]]]],[11,"boot","","",112,[[]]],[11,"finalize_static_space_map","","",112,[[["address",3]]]],[11,"is_finalized","","",112,[[]]],[11,"get_discontig_freelist_pr_ordinal","","",112,[[["commonfreelistpageresource",3]]]],[11,"get_descriptor_for_address","","",112,[[["address",3]],["spacedescriptor",3]]],[11,"add_to_cumulative_committed_pages","","",112,[[]]],[11,"common","mmtk::util::heap::freelistpageresource","",13,[[],["commonpageresource",3]]],[11,"common_mut","","",13,[[],["commonpageresource",3]]],[11,"alloc_pages","","",13,[[["opaquepointer",3]],["address",3]]],[11,"adjust_for_metadata","","",13,[[]]],[11,"common","mmtk::util::heap::monotonepageresource","",16,[[],["commonpageresource",3]]],[11,"common_mut","","",16,[[],["commonpageresource",3]]],[11,"reserve_pages","","",16,[[]]],[11,"alloc_pages","","",16,[[["opaquepointer",3]],["address",3]]],[11,"adjust_for_metadata","","",16,[[]]],[11,"start","mmtk::util::statistics::counter","",41,[[]]],[11,"stop","","",41,[[]]],[11,"phase_change","","",41,[[]]],[11,"print_count","","",41,[[]]],[11,"print_total","","",41,[[["option",4]]]],[11,"print_min","","",41,[[]]],[11,"print_max","","",41,[[]]],[11,"print_last","","",41,[[]]],[11,"merge_phases","","",41,[[]]],[11,"implicitly_start","","",41,[[]]],[11,"name","","",41,[[],["string",3]]],[11,"current_value","","",114,[[],["instant",3]]],[11,"diff","","",114,[[["instant",3]]]],[11,"print_diff","","",114,[[]]],[11,"flush","mmtk::plan::barriers","",116,[[]]],[11,"post_write_barrier","","",116,[[["writetarget",4]]]],[11,"flush","","",47,[[]]],[11,"post_write_barrier","","",47,[[["writetarget",4]]]],[11,"init","mmtk::plan::global","",50,[[["opaquepointer",3]]]],[11,"constraints","","",50,[[],["planconstraints",3]]],[11,"prepare","","",50,[[]]],[11,"release","","",50,[[]]],[11,"alloc_copy","","",50,[[["objectreference",3],["allocationsemantics",4]],["address",3]]],[11,"constraints","mmtk::plan::gencopy","",64,[[],["planconstraints",3]]],[11,"create_worker_local","","",64,[[["mmtk",3],["opaquepointer",3]],["gcworkerlocalptr",6]]],[11,"collection_required","","",64,[[["space",8]]]],[11,"gc_init","","",64,[[["vmmap",6],["arc",3]]]],[11,"schedule_collection","","",64,[[["mmtkscheduler",6]]]],[11,"get_allocator_mapping","","",64,[[],["enummap",3]]],[11,"prepare","","",64,[[["opaquepointer",3]]]],[11,"release","","",64,[[["opaquepointer",3]]]],[11,"get_collection_reserve","","",64,[[]]],[11,"get_pages_used","","",64,[[]]],[11,"base","","",64,[[],["baseplan",3]]],[11,"common","","",64,[[],["commonplan",3]]],[11,"in_nursery","","",64,[[]]],[11,"constraints","mmtk::plan::nogc","",65,[[],["planconstraints",3]]],[11,"create_worker_local","","",65,[[["mmtk",3],["opaquepointer",3]],["gcworkerlocalptr",6]]],[11,"gc_init","","",65,[[["vmmap",6],["arc",3]]]],[11,"base","","",65,[[],["baseplan",3]]],[11,"prepare","","",65,[[["opaquepointer",3]]]],[11,"release","","",65,[[["opaquepointer",3]]]],[11,"get_allocator_mapping","","",65,[[],["enummap",3]]],[11,"schedule_collection","","",65,[[["mmtkscheduler",6]]]],[11,"get_pages_used","","",65,[[]]],[11,"handle_user_collection_request","","",65,[[["opaquepointer",3]]]],[11,"constraints","mmtk::plan::semispace","",66,[[],["planconstraints",3]]],[11,"create_worker_local","","",66,[[["mmtk",3],["opaquepointer",3]],["gcworkerlocalptr",6]]],[11,"gc_init","","",66,[[["vmmap",6],["arc",3]]]],[11,"schedule_collection","","",66,[[["mmtkscheduler",6]]]],[11,"get_allocator_mapping","","",66,[[],["enummap",3]]],[11,"prepare","","",66,[[["opaquepointer",3]]]],[11,"release","","",66,[[["opaquepointer",3]]]],[11,"get_collection_reserve","","",66,[[]]],[11,"get_pages_used","","",66,[[]]],[11,"base","","",66,[[],["baseplan",3]]],[11,"common","","",66,[[],["commonplan",3]]],[11,"prepare","mmtk::plan::mutator_context","",59,[[["opaquepointer",3]]]],[11,"release","","",59,[[["opaquepointer",3]]]],[11,"alloc","","",59,[[["allocationtype",4]],["address",3]]],[11,"post_alloc","","",59,[[["allocationtype",4],["objectreference",3]]]],[11,"get_tls","","",59,[[],["opaquepointer",3]]],[11,"barrier","","",59,[[],["barrier",8]]],[11,"name","mmtk::policy::copyspace","",72,[[]]],[11,"is_live","","",72,[[["objectreference",3]]]],[11,"is_movable","","",72,[[]]],[11,"is_sane","","",72,[[]]],[11,"initialize_header","","",72,[[["objectreference",3]]]],[11,"name","mmtk::policy::immortalspace","",73,[[]]],[11,"is_live","","",73,[[["objectreference",3]]]],[11,"is_movable","","",73,[[]]],[11,"is_sane","","",73,[[]]],[11,"initialize_header","","",73,[[["objectreference",3]]]],[11,"name","mmtk::policy::largeobjectspace","",74,[[]]],[11,"is_live","","",74,[[["objectreference",3]]]],[11,"is_movable","","",74,[[]]],[11,"is_sane","","",74,[[]]],[11,"initialize_header","","",74,[[["objectreference",3]]]],[11,"name","mmtk::policy::lockfreeimmortalspace","",75,[[]]],[11,"is_live","","",75,[[["objectreference",3]]]],[11,"is_movable","","",75,[[]]],[11,"is_sane","","",75,[[]]],[11,"initialize_header","","",75,[[["objectreference",3]]]],[11,"as_space","mmtk::policy::copyspace","",72,[[],["space",8]]],[11,"as_sft","","",72,[[],["sft",8]]],[11,"get_page_resource","","",72,[[],["pageresource",8]]],[11,"common","","",72,[[],["commonspace",3]]],[11,"unsafe_common_mut","","",72,[[],["commonspace",3]]],[11,"init","","",72,[[["vmmap",6]]]],[11,"release_multiple_pages","","",72,[[["address",3]]]],[11,"as_space","mmtk::policy::immortalspace","",73,[[],["space",8]]],[11,"as_sft","","",73,[[],["sft",8]]],[11,"get_page_resource","","",73,[[],["pageresource",8]]],[11,"common","","",73,[[],["commonspace",3]]],[11,"unsafe_common_mut","","",73,[[],["commonspace",3]]],[11,"init","","",73,[[["vmmap",6]]]],[11,"release_multiple_pages","","",73,[[["address",3]]]],[11,"as_space","mmtk::policy::largeobjectspace","",74,[[],["space",8]]],[11,"as_sft","","",74,[[],["sft",8]]],[11,"get_page_resource","","",74,[[],["pageresource",8]]],[11,"init","","",74,[[["vmmap",6]]]],[11,"common","","",74,[[],["commonspace",3]]],[11,"unsafe_common_mut","","",74,[[],["commonspace",3]]],[11,"release_multiple_pages","","",74,[[["address",3]]]],[11,"as_space","mmtk::policy::lockfreeimmortalspace","",75,[[],["space",8]]],[11,"as_sft","","",75,[[],["sft",8]]],[11,"get_page_resource","","",75,[[],["pageresource",8]]],[11,"common","","",75,[[],["commonspace",3]]],[11,"unsafe_common_mut","","",75,[[],["commonspace",3]]],[11,"release_multiple_pages","","",75,[[["address",3]]]],[11,"init","","",75,[[["vmmap",6]]]],[11,"reserved_pages","","",75,[[]]],[11,"acquire","","",75,[[["opaquepointer",3]],["address",3]]],[11,"spawn_worker","mmtk","",108,[[["opaquepointer",3],["gcworker",6]]]],[11,"init","mmtk::plan::global","",50,[[["opaquepointer",3]]]],[11,"do_work","mmtk::util::sanity::sanity_checker","",36,[[["gcworker",6],["mmtk",3]]]],[11,"do_work","","",37,[[["gcworker",6],["mmtk",3]]]],[11,"do_work","","",38,[[["gcworker",6],["mmtk",3]]]],[11,"do_work","mmtk::scheduler::gc_works","",119,[[["gcworker",6],["mmtk",3]]]],[11,"do_work","","",79,[[["gcworker",6],["mmtk",3]]]],[11,"do_work","","",80,[[["gcworker",6],["mmtk",3]]]],[11,"do_work","","",81,[[["gcworker",6],["mmtk",3]]]],[11,"do_work","","",82,[[["gcworker",6],["mmtk",3]]]],[11,"do_work","","",83,[[["gcworker",6],["mmtk",3]]]],[11,"do_work","","",84,[[["gcworker",6],["mmtk",3]]]],[11,"do_work","","",85,[[["gcworker",6],["mmtk",3]]]],[11,"do_work","","",120,[[["gcworker",6],["mmtk",3]]]],[11,"do_work","","",86,[[["gcworker",6],["mmtk",3]]]],[11,"do_work","","",87,[[["gcworker",6],["mmtk",3]]]],[11,"do_work","","",88,[[["gcworker",6],["mmtk",3]]]],[11,"do_work","","",91,[[["gcworker",6],["mmtk",3]]]],[11,"do_work","","",92,[[["gcworker",6],["mmtk",3]]]],[11,"new","mmtk::util::sanity::sanity_checker","",113,[[["address",3],["mmtk",3],["vec",3]]]],[11,"trace_object","","",113,[[["objectreference",3]],["objectreference",3]]],[11,"clone","mmtk::util::address","",0,[[],["address",3]]],[11,"clone","","",1,[[],["objectreference",3]]],[11,"clone","mmtk::util::alloc::allocators","",4,[[],["allocatorselector",4]]],[11,"clone","mmtk::util::heap::space_descriptor","",19,[[],["spacedescriptor",3]]],[11,"clone","mmtk::util::heap","",21,[[],["vmrequest",4]]],[11,"clone","mmtk::util::opaque_pointer","",26,[[],["opaquepointer",3]]],[11,"clone","mmtk::util::options","",27,[[],["nurseryzeroingoptions",4]]],[11,"clone","","",28,[[],["planselector",4]]],[11,"clone","mmtk::plan::global","",57,[[],["allocationsemantics",4]]],[11,"clone","mmtk::scheduler","",99,[[],["workbucketstage",4]]],[11,"clone","","",118,[[],["workerlocalptr",3]]],[11,"default","mmtk::util::heap::layout","",111,[[]]],[11,"default","mmtk::util::heap::layout::map64","",112,[[]]],[11,"default","mmtk::util::opaque_pointer","",26,[[]]],[11,"default","mmtk::util::options","",30,[[]]],[11,"default","mmtk::util::reference_processor","",32,[[]]],[11,"default","mmtk::util::sanity::sanity_checker","",35,[[]]],[11,"default","","",36,[[],["schedulesanitygc",3]]],[11,"default","mmtk::util::statistics::stats","",43,[[]]],[11,"default","mmtk::util::treadmill","",44,[[]]],[11,"default","mmtk","",108,[[]]],[11,"default","mmtk::plan::barriers","",117,[[],["modbuffer",3]]],[11,"default","mmtk::plan::controller_collector_context","",48,[[]]],[11,"default","mmtk::policy::space","",68,[[],["sftmap",3]]],[11,"default","mmtk::scheduler::stat","",76,[[],["schedulerstat",3]]],[11,"default","","",78,[[],["workerlocalstat",3]]],[11,"default","mmtk::scheduler::gc_works","",81,[[],["preparecollector",3]]],[11,"default","","",84,[[],["releasecollector",3]]],[11,"default","","",85,[[],["stopmutators",3]]],[11,"default","","",120,[[],["endofgc",3]]],[11,"default","","",86,[[],["scanstackroots",3]]],[11,"default","","",88,[[],["scanvmspecificroots",3]]],[11,"default","","",92,[[],["processmodbuf",3]]],[11,"eq","mmtk::util::address","",0,[[["address",3]]]],[11,"ne","","",0,[[["address",3]]]],[11,"eq","","",1,[[["objectreference",3]]]],[11,"ne","","",1,[[["objectreference",3]]]],[11,"eq","mmtk::util::heap::space_descriptor","",19,[[["spacedescriptor",3]]]],[11,"ne","","",19,[[["spacedescriptor",3]]]],[11,"eq","mmtk::util::opaque_pointer","",26,[[["opaquepointer",3]]]],[11,"ne","","",26,[[["opaquepointer",3]]]],[11,"eq","mmtk::util::reference_processor","",33,[[["semantics",4]]]],[11,"eq","mmtk::plan::global","",52,[[["gcstatus",4]]]],[11,"eq","mmtk::scheduler","",99,[[["workbucketstage",4]]]],[11,"partial_cmp","mmtk::util::address","",0,[[["address",3]],[["ordering",4],["option",4]]]],[11,"lt","","",0,[[["address",3]]]],[11,"le","","",0,[[["address",3]]]],[11,"gt","","",0,[[["address",3]]]],[11,"ge","","",0,[[["address",3]]]],[11,"partial_cmp","","",1,[[["objectreference",3]],[["ordering",4],["option",4]]]],[11,"lt","","",1,[[["objectreference",3]]]],[11,"le","","",1,[[["objectreference",3]]]],[11,"gt","","",1,[[["objectreference",3]]]],[11,"ge","","",1,[[["objectreference",3]]]],[11,"deref","mmtk::util::heap::freelistpageresource","",13,[[],["commonfreelistpageresource",3]]],[11,"deref","mmtk::util::options","",29,[[],["options",3]]],[11,"deref","mmtk::util::sanity::sanity_checker","",113,[[]]],[11,"deref_mut","mmtk::util::heap::freelistpageresource","",13,[[],["commonfreelistpageresource",3]]],[11,"deref_mut","mmtk::util::sanity::sanity_checker","",113,[[]]],[11,"fmt","mmtk::util::address","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","mmtk::util::alloc::allocators","",4,[[["formatter",3]],["result",6]]],[11,"fmt","mmtk::util::heap::layout","",111,[[["formatter",3]],["result",6]]],[11,"fmt","mmtk::util::heap::space_descriptor","",19,[[["formatter",3]],["result",6]]],[11,"fmt","mmtk::util::heap","",21,[[["formatter",3]],["result",6]]],[11,"fmt","mmtk::util::int_array_freelist","",25,[[["formatter",3]],["result",6]]],[11,"fmt","mmtk::util::opaque_pointer","",26,[[["formatter",3]],["result",6]]],[11,"fmt","mmtk::util::options","",28,[[["formatter",3]],["result",6]]],[11,"fmt","mmtk::util::raw_memory_freelist","",31,[[["formatter",3]],["result",6]]],[11,"fmt","mmtk::util::reference_processor","",33,[[["formatter",3]],["result",6]]],[11,"fmt","mmtk::util::statistics::counter","",41,[[["formatter",3]],["result",6]]],[11,"fmt","mmtk::util::treadmill","",44,[[["formatter",3]],["result",6]]],[11,"fmt","mmtk::plan::global","",57,[[["formatter",3]],["result",6]]],[11,"fmt","mmtk::scheduler","",99,[[["formatter",3]],["result",6]]],[11,"fmt","mmtk::util::address","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"sub","","",0,[[["bytesize",6]],["address",3]]],[11,"sub","","",0,[[["address",3]],["bytesize",6]]],[11,"add","","",0,[[["bytesize",6]],["address",3]]],[11,"add","","",0,[[["byteoffset",6]],["address",3]]],[11,"add_assign","","",0,[[["bytesize",6]]]],[11,"add_assign","","",0,[[["byteoffset",6]]]],[11,"sub_assign","","",0,[[["bytesize",6]]]],[11,"bitand","","",0,[[]]],[11,"bitand","","",0,[[]]],[11,"bitor","","",0,[[]]],[11,"bitor","","",0,[[]]],[11,"shr","","",0,[[]]],[11,"hash","","",0,[[]]],[11,"hash","","",1,[[]]],[11,"from_str","mmtk::util::options","",27,[[],["result",4]]],[11,"from_str","","",28,[[],["result",4]]],[11,"fmt","mmtk::util::address","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"slice","mmtk::plan::global","",57,[[]]],[11,"slice_mut","","",57,[[]]],[11,"from_usize","","",57,[[]]],[11,"to_usize","","",57,[[]]],[11,"from_function","","",57,[[["fnmut",8]]]],[11,"slice","mmtk::scheduler","",99,[[]]],[11,"slice_mut","","",99,[[]]],[11,"from_usize","","",99,[[]]],[11,"to_usize","","",99,[[]]],[11,"from_function","","",99,[[["fnmut",8]]]],[11,"set_limit","mmtk::util::alloc","",7,[[["address",3]]]],[11,"reset","","",7,[[]]],[11,"rebind","","",7,[[["option",4],["space",8]]]],[11,"new","","",7,[[["space",8],["option",4],["plan",8],["opaquepointer",3]]]],[11,"new","mmtk::util::heap::layout","",111,[[]]],[11,"new","mmtk::util::heap","",20,[[["address",3]]]],[11,"reserve","","",20,[[],["address",3]]],[11,"get_discontig_start","","",20,[[],["address",3]]],[11,"get_discontig_end","","",20,[[],["address",3]]],[11,"get_total_pages","","",20,[[]]],[11,"is_discontiguous","","",21,[[]]],[11,"common64bit","","",21,[[]]],[11,"discontiguous","","",21,[[]]],[11,"fixed_size","","",21,[[]]],[11,"fraction","","",21,[[]]],[11,"high_fixed_size","","",21,[[]]],[11,"fixed_extent","","",21,[[]]],[11,"new","mmtk::util","",115,[[]]],[11,"reset","","",115,[[]]],[11,"increment","","",115,[[]]],[11,"peek","","",115,[[]]],[11,"new","mmtk","",108,[[]]],[11,"harness_begin","","",108,[[["opaquepointer",3]]]],[11,"harness_end","","",108,[[]]],[11,"new","mmtk::plan::gencopy","",64,[[["mmapper",6],["unsafeoptionswrapper",3],["arc",3],["vmmap",6],["mmtkscheduler",6]]]],[11,"tospace","","",64,[[],["copyspace",3]]],[11,"fromspace","","",64,[[],["copyspace",3]]],[11,"new","mmtk::plan::nogc","",65,[[["mmapper",6],["unsafeoptionswrapper",3],["arc",3],["vmmap",6],["mmtkscheduler",6]]]],[11,"new","mmtk::plan::semispace","",66,[[["mmapper",6],["unsafeoptionswrapper",3],["arc",3],["vmmap",6],["mmtkscheduler",6]]]],[11,"tospace","","",66,[[],["copyspace",3]]],[11,"fromspace","","",66,[[],["copyspace",3]]],[11,"spawn_worker","mmtk::scheduler","",93,[[["worker",3],["opaquepointer",3]]]],[11,"init","","",94,[[["opaquepointer",3]]]],[11,"new","","",96,[[],["arc",3]]],[11,"num_workers","","",96,[[]]],[11,"initialize","","",96,[[["arc",3],["opaquepointer",3]]]],[11,"initialize_worker","","",96,[[["opaquepointer",3],["arc",3]]]],[11,"set_initializer","","",96,[[["coordinatorwork",8],["option",4]]]],[11,"set_finalizer","","",96,[[["coordinatorwork",8],["option",4]]]],[11,"worker_group","","",96,[[],[["workergroup",3],["arc",3]]]],[11,"wait_for_completion","","Drain the message queue and execute coordinator works",96,[[]]],[11,"deactivate_all","","",96,[[]]],[11,"reset_state","","",96,[[]]],[11,"add_coordinator_work","","",96,[[["worker",3]]]],[11,"poll","","Get a scheduable work. Called by workers",96,[[["worker",3]],[["box",3],["work",8]]]],[11,"enable_stat","","",96,[[]]],[11,"statistics","","",96,[[],[["hashmap",3],["string",3]]]],[11,"notify_mutators_paused","","",96,[[["mmtk",3]]]],[11,"notify_mutators_paused","","",121,[[["mmtk",3]]]],[11,"do_work_with_stat","","",97,[[["worker",3]]]],[18,"UNINITIALIZED","","",118,null],[11,"new","","",118,[[["workerlocal",8]]]],[11,"as_type","","SafetyThe user needs to guarantee that the type supplied …",118,[[]]],[11,"new","","",100,[[["weak",3],["scheduler",3]]]],[11,"add_work","","",100,[[["workbucketstage",4]]]],[11,"is_parked","","",100,[[]]],[11,"is_coordinator","","",100,[[]]],[11,"scheduler","","",100,[[],["scheduler",3]]],[11,"local","","SafetyThe user needs to guarantee that the type supplied …",100,[[]]],[11,"set_local","","",100,[[["workerlocalptr",3]]]],[11,"init","","",100,[[["opaquepointer",3]]]],[11,"do_work","","",100,[[]]],[11,"run","","",100,[[]]],[11,"new","","",101,[[["weak",3],["scheduler",3]],["arc",3]]],[11,"worker_count","","",101,[[]]],[11,"parked_workers","","",101,[[]]],[11,"all_parked","","",101,[[]]],[11,"spawn_workers","","",101,[[["opaquepointer",3]]]],[11,"mutators","mmtk::vm","A utility method to provide a thread-safe mutator …",102,[[],["synchronizedmutatoriterator",3]]],[11,"out_of_memory","","Inform the VM for an out-of-memory error. The VM can …",103,[[["opaquepointer",3]]]],[18,"HAS_GC_BYTE","","Whether an exclusive GC byte in each object\'s header word …",104,null],[18,"GC_BYTE_OFFSET","","The offset of the GC byte from the object reference, in …",104,null],[11,"clear_referent","","Weak and soft references always clear the referent before …",105,[[["objectreference",3]]]],[18,"SCAN_MUTATORS_IN_SAFEPOINT","","Scan stack roots after all mutators are paused.",106,null],[18,"SINGLE_THREAD_MUTATOR_SCANNING","","Scan all the mutators within a single work packet.",106,null]],"p":[[3,"Address"],[3,"ObjectReference"],[8,"Allocator"],[3,"Allocators"],[4,"AllocatorSelector"],[3,"LargeObjectAllocator"],[8,"LinearScan"],[3,"BumpAllocator"],[8,"GenericFreeList"],[3,"HeaderByte"],[8,"Mmapper"],[8,"Map"],[3,"CommonFreeListPageResource"],[3,"FreeListPageResource"],[4,"MonotonePageResourceConditional"],[13,"Contiguous"],[3,"MonotonePageResource"],[8,"PageResource"],[3,"CommonPageResource"],[3,"SpaceDescriptor"],[3,"HeapMeta"],[4,"VMRequest"],[13,"RequestFixed"],[13,"RequestExtent"],[13,"RequestFraction"],[3,"IntArrayFreeList"],[3,"OpaquePointer"],[4,"NurseryZeroingOptions"],[4,"PlanSelector"],[3,"UnsafeOptionsWrapper"],[3,"Options"],[3,"RawMemoryFreeList"],[3,"ReferenceProcessors"],[4,"Semantics"],[3,"ReferenceProcessor"],[3,"SanityChecker"],[3,"ScheduleSanityGC"],[3,"SanityPrepare"],[3,"SanityRelease"],[8,"Counter"],[8,"Diffable"],[3,"LongCounter"],[3,"SharedStats"],[3,"Stats"],[3,"TreadMill"],[4,"WriteTarget"],[8,"Barrier"],[3,"FieldRememberingBarrier"],[3,"ControllerCollectorContext"],[8,"CopyContext"],[3,"NoCopy"],[8,"Plan"],[4,"GcStatus"],[3,"BasePlan"],[3,"BaseUnsync"],[3,"CommonPlan"],[3,"CommonUnsync"],[4,"AllocationSemantics"],[3,"MutatorConfig"],[3,"Mutator"],[8,"MutatorContext"],[3,"PlanConstraints"],[8,"TraceLocal"],[8,"TransitiveClosure"],[3,"GenCopy"],[3,"NoGC"],[3,"SemiSpace"],[8,"SFT"],[3,"SFTMap"],[8,"Space"],[3,"CommonSpace"],[3,"SpaceOptions"],[3,"CopySpace"],[3,"ImmortalSpace"],[3,"LargeObjectSpace"],[3,"LockFreeImmortalSpace"],[3,"SchedulerStat"],[3,"WorkStat"],[3,"WorkerLocalStat"],[3,"Prepare"],[3,"PrepareMutator"],[3,"PrepareCollector"],[3,"Release"],[3,"ReleaseMutator"],[3,"ReleaseCollector"],[3,"StopMutators"],[3,"ScanStackRoots"],[3,"ScanStackRoot"],[3,"ScanVMSpecificRoots"],[3,"ProcessEdgesBase"],[8,"ProcessEdgesWork"],[3,"ScanObjects"],[3,"ProcessModBuf"],[8,"Context"],[8,"WorkerLocal"],[4,"CoordinatorMessage"],[3,"Scheduler"],[8,"Work"],[8,"GCWork"],[4,"WorkBucketStage"],[3,"Worker"],[3,"WorkerGroup"],[8,"ActivePlan"],[8,"Collection"],[8,"ObjectModel"],[8,"ReferenceGlue"],[8,"Scanning"],[8,"VMBinding"],[3,"MMTK"],[3,"DumpLinearScan"],[3,"GCByte"],[3,"FragmentedMapper"],[3,"Map64"],[3,"SanityGCProcessEdges"],[3,"MonotoneNanoTime"],[3,"SynchronizedCounter"],[3,"NoBarrier"],[3,"ModBuffer"],[3,"WorkerLocalPtr"],[3,"ScheduleCollection"],[3,"EndOfGC"],[6,"MMTkScheduler"]]}\
}');
addSearchOptions(searchIndex);initSearch(searchIndex);