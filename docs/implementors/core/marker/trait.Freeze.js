(function() {var implementors = {};
implementors["mmtk"] = [{"text":"impl Freeze for Address","synthetic":true,"types":[]},{"text":"impl Freeze for ObjectReference","synthetic":true,"types":[]},{"text":"impl&lt;VM&gt; Freeze for Allocators&lt;VM&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for AllocatorSelector","synthetic":true,"types":[]},{"text":"impl&lt;VM&gt; Freeze for BumpAllocator&lt;VM&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for DumpLinearScan","synthetic":true,"types":[]},{"text":"impl&lt;VM&gt; Freeze for LargeObjectAllocator&lt;VM&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for GCByte","synthetic":true,"types":[]},{"text":"impl !Freeze for FragmentedMapper","synthetic":true,"types":[]},{"text":"impl !Freeze for Map64","synthetic":true,"types":[]},{"text":"impl Freeze for CommonFreeListPageResource","synthetic":true,"types":[]},{"text":"impl&lt;VM&gt; !Freeze for FreeListPageResource&lt;VM&gt;","synthetic":true,"types":[]},{"text":"impl !Freeze for HeapMeta","synthetic":true,"types":[]},{"text":"impl&lt;VM&gt; !Freeze for MonotonePageResource&lt;VM&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for MonotonePageResourceConditional","synthetic":true,"types":[]},{"text":"impl&lt;VM&gt; !Freeze for CommonPageResource&lt;VM&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for SpaceDescriptor","synthetic":true,"types":[]},{"text":"impl Freeze for VMRequest","synthetic":true,"types":[]},{"text":"impl Freeze for IntArrayFreeList","synthetic":true,"types":[]},{"text":"impl Freeze for OpaquePointer","synthetic":true,"types":[]},{"text":"impl Freeze for NurseryZeroingOptions","synthetic":true,"types":[]},{"text":"impl !Freeze for UnsafeOptionsWrapper","synthetic":true,"types":[]},{"text":"impl Freeze for Options","synthetic":true,"types":[]},{"text":"impl Freeze for RawMemoryFreeList","synthetic":true,"types":[]},{"text":"impl !Freeze for ReferenceProcessors","synthetic":true,"types":[]},{"text":"impl !Freeze for ReferenceProcessor","synthetic":true,"types":[]},{"text":"impl Freeze for Semantics","synthetic":true,"types":[]},{"text":"impl Freeze for MonotoneNanoTime","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Freeze for LongCounter&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as Diffable&gt;::Val: Freeze,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl !Freeze for SharedStats","synthetic":true,"types":[]},{"text":"impl !Freeze for Stats","synthetic":true,"types":[]},{"text":"impl !Freeze for SynchronizedCounter","synthetic":true,"types":[]},{"text":"impl !Freeze for TreadMill","synthetic":true,"types":[]},{"text":"impl&lt;VM&gt; !Freeze for MMTK&lt;VM&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for AllocationSemantics","synthetic":true,"types":[]},{"text":"impl&lt;P&gt; Freeze for Mutator&lt;P&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for SFTMap","synthetic":true,"types":[]},{"text":"impl&lt;VM&gt; Freeze for CommonSpace&lt;VM&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for SpaceOptions","synthetic":true,"types":[]},{"text":"impl&lt;VM&gt; !Freeze for ImmortalSpace&lt;VM&gt;","synthetic":true,"types":[]},{"text":"impl&lt;VM&gt; !Freeze for CopySpace&lt;VM&gt;","synthetic":true,"types":[]},{"text":"impl&lt;VM&gt; !Freeze for LargeObjectSpace&lt;VM&gt;","synthetic":true,"types":[]},{"text":"impl&lt;C&gt; Freeze for CoordinatorMessage&lt;C&gt;","synthetic":true,"types":[]},{"text":"impl&lt;C&gt; !Freeze for Scheduler&lt;C&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for SchedulerStat","synthetic":true,"types":[]},{"text":"impl Freeze for WorkStat","synthetic":true,"types":[]},{"text":"impl !Freeze for WorkerLocalStat","synthetic":true,"types":[]},{"text":"impl&lt;C&gt; !Freeze for Worker&lt;C&gt;","synthetic":true,"types":[]},{"text":"impl&lt;C&gt; Freeze for WorkerGroup&lt;C&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for ScheduleCollection","synthetic":true,"types":[]},{"text":"impl&lt;P&gt; Freeze for Prepare&lt;P&gt;","synthetic":true,"types":[]},{"text":"impl&lt;VM&gt; Freeze for PrepareMutator&lt;VM&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for PrepareCollector","synthetic":true,"types":[]},{"text":"impl&lt;P&gt; Freeze for Release&lt;P&gt;","synthetic":true,"types":[]},{"text":"impl&lt;VM&gt; Freeze for ReleaseMutator&lt;VM&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for ReleaseCollector","synthetic":true,"types":[]},{"text":"impl&lt;ScanEdges&gt; Freeze for StopMutators&lt;ScanEdges&gt;","synthetic":true,"types":[]},{"text":"impl Freeze for EndOfGC","synthetic":true,"types":[]},{"text":"impl&lt;Edges&gt; Freeze for ScanStackRoots&lt;Edges&gt;","synthetic":true,"types":[]},{"text":"impl&lt;Edges&gt; Freeze for ScanStackRoot&lt;Edges&gt;","synthetic":true,"types":[]},{"text":"impl&lt;Edges&gt; Freeze for ScanVMSpecificRoots&lt;Edges&gt;","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Freeze for ProcessEdgesBase&lt;E&gt;","synthetic":true,"types":[]},{"text":"impl&lt;Edges&gt; Freeze for ScanObjects&lt;Edges&gt;","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Freeze for ProcessModBuf&lt;E&gt;","synthetic":true,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()